{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://platformer-game/./app/areas/index.js","webpack://platformer-game/./app/controller/audio.js","webpack://platformer-game/./app/controller/index.js","webpack://platformer-game/./app/controller/input.js","webpack://platformer-game/./app/controller/mouse-input.js","webpack://platformer-game/./app/engine/index.js","webpack://platformer-game/./app/game/animator.js","webpack://platformer-game/./app/game/coins.js","webpack://platformer-game/./app/game/collider.js","webpack://platformer-game/./app/game/enemies.js","webpack://platformer-game/./app/game/fireballs.js","webpack://platformer-game/./app/game/index.js","webpack://platformer-game/./app/game/object.js","webpack://platformer-game/./app/game/player.js","webpack://platformer-game/./app/game/portal.js","webpack://platformer-game/./app/game/water.js","webpack://platformer-game/./app/game/world.js","webpack://platformer-game/./app/screen/index.js","webpack://platformer-game/./app/screen/tileset.js","webpack://platformer-game/./app/util/index.js","webpack://platformer-game/webpack/bootstrap","webpack://platformer-game/webpack/runtime/define property getters","webpack://platformer-game/webpack/runtime/hasOwnProperty shorthand","webpack://platformer-game/webpack/runtime/make namespace object","webpack://platformer-game/./app/index.js"],"sourcesContent":["import area1 from \"./area-1.json\";\nimport area2 from \"./area-2.json\";\nimport area3 from \"./area-3.json\";\nimport area4 from \"./area-4.json\";\nimport area5 from \"./area-5.json\";\nimport area6 from \"./area-6.json\";\nimport area7 from \"./area-7.json\";\nimport area8 from \"./area-8.json\";\n\nexport default {\n  [area1.id]: area1,\n  [area2.id]: area2,\n  [area3.id]: area3,\n  [area3.id]: area3,\n  [area4.id]: area4,\n  [area5.id]: area5,\n  [area6.id]: area6,\n  [area7.id]: area7,\n  [area8.id]: area8,\n};\n","import { getData } from \"../util/\";\nexport default class AudioController {\n  constructor() {\n    this.count = 4;\n    this.audios = {};\n  }\n\n  static play(key, ext = \"wav\", volume = 0.4) {\n    if (getData(\"mute_sounds\")) return;\n\n    const audio = new Audio(`./assets/audio/${key}.${ext}`);\n    audio.volume = volume;\n    audio.play();\n  }\n\n  play(key, ext = \"wav\") {\n    try {\n      if (!this.audios[key]) {\n        this.audios[key] = new Audio(`./assets/audio/${key}.${ext}`);\n      }\n\n      this.audios[key].volume = 0.4;\n\n      if (getData(\"mute_music\")) return;\n\n      this.audios[key].play();\n    } catch (error) {}\n\n    return this;\n  }\n\n  load(audios = [], loaded) {\n    const filteredAudios = audios.filter(({ file }) => !this.audios[file]);\n\n    if (!filteredAudios.length) {\n      loaded(true);\n      return;\n    }\n\n    loaded(false);\n\n    let done = 0;\n    const onload = () => {\n      done += 1;\n      if (filteredAudios.length === done) {\n        loaded(true);\n      }\n    };\n\n    audios.forEach(({ file, ext = \"mp3\" }) => {\n      this.audios[file] = new Audio();\n      this.audios[file].addEventListener(\"canplaythrough\", onload, false);\n      this.audios[file].src = `./assets/audio/${file}.${ext}`;\n      this.audios[file].volume = 0.5;\n    });\n  }\n\n  loop(key) {\n    if (this.audios[key]) {\n      this.audios[key].loop = true;\n    }\n  }\n\n  pause(key) {\n    if (this.audios[key]) {\n      this.audios[key].pause();\n    }\n  }\n\n  stop(key) {\n    if (this.audios[key]) {\n      this.pause(key);\n      this.audios[key].currentTime = 0;\n    }\n  }\n\n  volume(key, value) {\n    if (this.audios[key]) {\n      this.audios[key].volume = value / 100;\n    }\n  }\n\n  static animate(callback, go = false, delay = 12) {\n    if (go) {\n      this.count++;\n\n      while (this.count > delay) {\n        this.count -= delay;\n        callback();\n      }\n    } else {\n      this.count = 4;\n    }\n  }\n}\n","import Input from \"./input\";\n\nexport default class Controller {\n  constructor() {\n    this.up = new Input();\n    this.left = new Input();\n    this.right = new Input();\n    this.fire = new Input();\n  }\n\n  keyDownUp(type, keyCode) {\n    let down = type == \"keydown\" ? true : false;\n\n    switch (keyCode) {\n      case 37:\n      case 65:\n        this.left.getInput(down);\n        break;\n      case 38:\n      case 32:\n        this.up.getInput(down);\n        break;\n      case 39:\n      case 68:\n        this.right.getInput(down);\n        break;\n      case 13:\n      case 16:\n        this.fire.getInput(down);\n    }\n  }\n}\n","export default class Input {\n  constructor() {\n    this.down = false;\n    this.active = false;\n  }\n\n  getInput(down) {\n    if (this.down != down) this.active = down;\n    this.down = down;\n  }\n}\n","export default class MouseInput {\n  constructor(id, action) {\n    this.actions = this.holdit(document.getElementById(id), action, 1000, 2);\n  }\n\n  holdit(btn, action, start, speedup) {\n    let timeout;\n\n    const clear = () => {\n      clearTimeout(timeout);\n    };\n\n    const preventDefault = (e) => {\n      if (e.preventDefault) {\n        e.preventDefault();\n      }\n    };\n\n    const repeat = function () {\n      action(\"keydown\");\n\n      timeout = setTimeout(repeat, start);\n      start = start / speedup;\n    };\n\n    try {\n      btn.ontouchstart = function (e) {\n        preventDefault(e);\n\n        repeat();\n      };\n\n      btn.ontouchend = function (e) {\n        preventDefault(e);\n        action(\"keyup\");\n\n        clear();\n      };\n    } catch (error) {\n      console.error(\"Error in mouse input\", error);\n    }\n    return { clear };\n  }\n}\n","export default class GameEngine {\n  constructor(timeStep, update, render) {\n    this.timeStep = timeStep;\n    this.update = update;\n    this.render = render;\n    this.started = false;\n\n    this.pause = false;\n\n    this.updated = false;\n\n    this.time = null;\n    this.extraTime = 0;\n    this.animationFrameRequest = null;\n    this.engineLoop = (t) => this.loop(t);\n  }\n\n  loop(timeStamp) {\n    if (this.pause) {\n      return;\n    }\n\n    this.animationFrameRequest = window.requestAnimationFrame(this.engineLoop);\n\n    this.extraTime += timeStamp - this.time;\n    this.time = timeStamp;\n\n    if (this.extraTime >= this.timeStep * 3) {\n      this.extraTime = this.timeStep;\n    }\n\n    while (this.extraTime >= this.timeStep) {\n      this.extraTime -= this.timeStep;\n\n      this.update(this.timeStamp);\n\n      this.updated = true;\n    }\n\n    if (this.updated) {\n      this.updated = false;\n      this.render(this.timeStamp);\n    }\n  }\n\n  start() {\n    this.started = true;\n    this.extraTime = this.timeStep;\n\n    this.time = window.performance.now();\n    this.animationFrameRequest = window.requestAnimationFrame(this.engineLoop);\n  }\n\n  stop() {\n    window.cancelAnimationFrame(this.animationFrameRequest);\n  }\n\n  hold() {\n    this.pause = true;\n  }\n\n  resume() {\n    this.pause = false;\n  }\n}\n","export default class Animator {\n  constructor(frameSet, delay = 4) {\n    this.count = 0;\n    this.delay = delay >= 1 ? delay : 1;\n    this.frameSet = frameSet;\n    this.frameIndex = 0;\n    this.frameValue = frameSet[0];\n  }\n\n  animate(last) {\n    this.loop(last);\n  }\n\n  changeFrameSet(frameSet, delay = 4, frameIndex = 0) {\n    if (this.frameSet === frameSet) {\n      return;\n    }\n\n    this.count = 0;\n    this.delay = delay;\n    this.frameSet = frameSet;\n    this.frameIndex = frameIndex;\n    this.frameValue = frameSet[frameIndex];\n  }\n\n  loop(last) {\n    this.count++;\n\n    while (this.count > this.delay) {\n      this.count -= this.delay;\n\n      if (last && this.frameIndex === this.frameSet.length - 1) {\n        this.frameIndex = this.frameSet.length - 1;\n      } else {\n        this.frameIndex = this.frameIndex < this.frameSet.length - 1 ? this.frameIndex + 1 : 0;\n      }\n\n      this.frameValue = this.frameSet[this.frameIndex];\n    }\n  }\n}\n","import Object from \"./object\";\nimport Animator from \"./animator\";\nexport default class items {\n  constructor(objects = [], tileSize, collectedCoins) {\n    this.items = [];\n    this.loaded = false;\n\n    const keys = [{ id: \"\", count: 16 }];\n\n    this.frameSets = {};\n\n    this.assetCount = 16;\n    this.loadCount = 0;\n    keys.forEach(({ count }) => {\n      for (let index = 1; index <= count; index++) {\n        const image = new Image();\n        image.onload = (e) => {\n          this.loadCount += 1;\n\n          if (count === this.loadCount) {\n            this.loaded = true;\n          }\n        };\n        image.src = `./assets/sprites/coin/image ${index}.webp`;\n\n        const addImage = (k, image) => {\n          if (!this.frameSets[k]) {\n            this.frameSets[k] = [];\n          }\n          this.frameSets[k].push(image);\n        };\n\n        addImage(\"coin\", image);\n      }\n    });\n\n    for (let index = 0; index < objects.length; index++) {\n      const { id, left, top, offsetX, offsetY } = objects[index];\n\n      if (!collectedCoins.includes(id)) {\n        this.items.push(\n          new Coin(id, left * tileSize, top * tileSize, offsetX, offsetY, this.frameSets[\"coin\"]),\n        );\n      }\n    }\n  }\n\n  remove(coin) {\n    this.items.splice(this.items.indexOf(coin), 1);\n  }\n\n  update() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].update();\n    }\n  }\n\n  updateAnimation() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].updateAnimation();\n    }\n  }\n}\n\nclass Coin extends Object {\n  constructor(id, x, y, offsetX = 3, offsetY = 3, frameSet) {\n    super(x, y, 8, 10);\n\n    this.id = id;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    this.baseX = x;\n    this.baseY = y;\n    this.positionX = Math.random() * Math.PI * 2;\n    this.positionY = this.positionX * 2;\n\n    this.animator = new Animator(frameSet);\n  }\n\n  update() {\n    this.positionX += 0.1;\n    this.positionY += 0.15;\n\n    this.x = this.baseX + Math.cos(this.positionX) * 1.5;\n    this.y = this.baseY + Math.sin(this.positionY);\n  }\n\n  updateAnimation() {\n    this.animator.animate();\n  }\n}\n","export default class Collider {\n  collide(value, object, tileX, tileY, tileSize) {\n    const router = (direction) => {\n      switch (direction) {\n        case \"t\":\n          return this.collidePlatformTop(object, tileY);\n        case \"b\":\n          return this.collidePlatformBottom(object, tileY + tileSize);\n        case \"l\":\n          return this.collidePlatformLeft(object, tileX);\n        case \"r\":\n          return this.collidePlatformRight(object, tileX + tileSize);\n        default:\n          break;\n      }\n    };\n\n    let flag = false;\n    if (typeof value === \"string\") {\n      const keys = value.split(\"\");\n\n      for (let index = 0; index < keys.length; index++) {\n        flag = router(keys[index]);\n        if (flag) {\n          break;\n        }\n      }\n    }\n\n    return flag;\n  }\n\n  collidePlatformBottom(object, bottomTile) {\n    if (object.getTop() < bottomTile && object.getOldTop() >= bottomTile) {\n      object.setTop(bottomTile);\n      object.velocityY = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatformLeft(object, leftTile) {\n    if (object.getRight() > leftTile && object.getOldRight() <= leftTile) {\n      object.setRight(leftTile - 0.01);\n      object.velocityX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatformRight(object, rightTile) {\n    if (object.getLeft() < rightTile && object.getOldLeft() >= rightTile) {\n      object.setLeft(rightTile);\n      object.velocityX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatformTop(object, topTile) {\n    if (object.getBottom() > topTile && object.getOldBottom() <= topTile) {\n      object.setBottom(topTile - 0.01);\n      object.velocityY = 0;\n      object.jumping = false;\n      return true;\n    }\n    return false;\n  }\n}\n","import Object from \"./object\";\nimport Animator from \"./animator\";\n\nconst enemyTypes = {\n  pig: {\n    maxV: 0.8,\n    minV: 0.5,\n    delay: 2,\n    width: 21,\n    height: 20,\n  },\n  slime: {\n    maxV: 0.4,\n    minV: 0.2,\n    delay: 4,\n    width: 23,\n    height: 20,\n  },\n  chameleon: {\n    maxV: 0.4,\n    minV: 0.2,\n    delay: 2,\n    width: 22,\n    height: 20,\n  },\n};\n\nexport default class Enemies {\n  constructor(enemies = [], tileSize = 16, killedEnemies = \"\") {\n    this.items = [];\n    this.loaded = false;\n\n    const keys = [\n      { id: \"pig\", count: 16 },\n      { id: \"slime\", count: 10 },\n      { id: \"chameleon\", count: 8 },\n    ];\n\n    this.frameSets = {};\n\n    this.loadCount = 0;\n    this.assetCount = keys.reduce((total, { count }) => total + count * 2, 0);\n\n    keys.forEach(({ id, count }) => {\n      for (let index = 1; index <= count; index++) {\n        const onImgLoad = () => {\n          this.loadCount += 1;\n\n          if (this.assetCount === this.loadCount) {\n            this.loaded = true;\n          }\n        };\n        const imageLeft = new Image();\n        const imageRight = new Image();\n        imageLeft.onload = onImgLoad;\n        imageRight.onload = onImgLoad;\n        imageLeft.src = `./assets/sprites/enemies/${id}/left/image_part_0${index}.png`;\n        imageRight.src = `./assets/sprites/enemies/${id}/right/image_part_0${index}.png`;\n\n        const addImage = (k, image) => {\n          if (!this.frameSets[k]) {\n            this.frameSets[k] = [];\n          }\n          this.frameSets[k].push(image);\n        };\n\n        addImage(`${id}Left`, imageLeft);\n        addImage(`${id}Right`, imageRight);\n      }\n    });\n\n    for (let index = 0; index < enemies.length; index++) {\n      const { id, type, left, top, sway, dir } = enemies[index];\n\n      if (!killedEnemies.includes(id)) {\n        this.items.push(\n          new Enemy(\n            id,\n            type,\n            left * tileSize,\n            top * tileSize,\n            [this.frameSets[`${type}Left`], this.frameSets[`${type}Right`]],\n            sway,\n            dir,\n          ),\n        );\n      }\n    }\n  }\n\n  remove(enemy) {\n    this.items.splice(this.items.indexOf(enemy), 1);\n  }\n\n  update() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].update();\n    }\n  }\n\n  updateAnimation() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].updateAnimation();\n    }\n  }\n}\n\nclass Enemy extends Object {\n  constructor(id, type, x, y, frameSets, sway = 24, direction = 1) {\n    const { width = 20, height = 20, delay = 2, maxV = 0.8, minV = 0.5 } = enemyTypes[type] || {};\n\n    super(x, y - 4, width, height);\n\n    this.id = id;\n    this.sway = sway;\n    this.frameSets = frameSets;\n\n    this.baseX = x;\n    this.baseY = y;\n    this.delay = delay;\n    this.direction = direction;\n    this.velocity = Math.random() * (maxV - minV) + minV;\n\n    this.animator = new Animator(frameSets[direction < 0 ? 0 : 1], delay);\n  }\n\n  update() {\n    this.x += this.velocity * this.direction;\n\n    if (this.x > this.baseX + this.sway) {\n      this.direction = -1;\n      this.animator.changeFrameSet(this.frameSets[0], this.delay);\n    } else if (this.x <= this.baseX - this.sway) {\n      this.direction = 1;\n      this.animator.changeFrameSet(this.frameSets[1], this.delay);\n    }\n  }\n\n  updateAnimation() {\n    this.animator.animate();\n  }\n}\n","import Object from \"./object\";\nimport Animator from \"./animator\";\n\nexport default class Fireballs {\n  constructor() {\n    this.items = [];\n    this.loaded = false;\n\n    this.frameSets = {};\n\n    const keys = [{ id: \"\", count: 5 }];\n\n    this.assetCount = 10;\n    this.loadCount = 0;\n    keys.forEach(({ count }) => {\n      for (let index = 1; index <= count; index++) {\n        const onImgLoad = () => {\n          this.loadCount += 1;\n\n          if (this.assetCount === this.loadCount) {\n            this.loaded = true;\n          }\n        };\n        const imageLeft = new Image();\n        imageLeft.onload = onImgLoad;\n        imageLeft.src = `./assets/sprites/fireball/left/image ${index}.webp`;\n        const imageRight = new Image();\n        imageRight.onload = onImgLoad;\n        imageRight.src = `./assets/sprites/fireball/right/image ${index}.webp`;\n\n        const addImage = (k, image) => {\n          if (!this.frameSets[k]) {\n            this.frameSets[k] = [];\n          }\n          this.frameSets[k].push(image);\n        };\n\n        addImage(\"fireballLeft\", imageLeft);\n        addImage(\"fireballRight\", imageRight);\n      }\n    });\n  }\n\n  update() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].update();\n    }\n  }\n\n  updateAnimation() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].updateAnimation();\n    }\n  }\n\n  add(id, x, y, direction) {\n    this.items.push(\n      new Fireball(\n        id,\n        x,\n        y,\n        direction,\n        this.frameSets[`fireball${direction < 0 ? \"Left\" : \"Right\"}`],\n      ),\n    );\n  }\n\n  remove(fireball) {\n    this.items.splice(this.items.indexOf(fireball), 1);\n  }\n\n  reset() {\n    this.items = [];\n  }\n}\n\nclass Fireball extends Object {\n  constructor(id, x, y, direction, frameSet) {\n    super(x, y, 32, 16);\n\n    this.id = id;\n    this.direction = direction;\n\n    this.velocity = 5;\n\n    this.animator = new Animator(frameSet);\n  }\n\n  update() {\n    if (this.direction < 0) {\n      this.x -= this.velocity;\n    } else {\n      this.x += this.velocity;\n    }\n  }\n\n  updateAnimation() {\n    this.animator.animate();\n  }\n}\n","import World from \"./world\";\n\nexport default class Game {\n  constructor(gameOverCallback) {\n    this.world = new World();\n    this.over = false;\n\n    this.onGameOver = () => {\n      this.over = true;\n\n      gameOverCallback(this.world.totalEnemies * 100 + this.world.totalCoins * 20);\n    };\n  }\n\n  isLoaded() {\n    return this.world.isLoaded();\n  }\n\n  update() {\n    this.world.update(this.onGameOver);\n  }\n\n  setGameOver(val) {\n    this.over = val;\n  }\n}\n","export default class Object {\n  constructor(x, y, width, height) {\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.xOld = x;\n    this.y = y;\n    this.yOld = y;\n  }\n\n  getBottom() {\n    return this.y + this.height;\n  }\n\n  getLeft() {\n    return this.x;\n  }\n\n  getRight() {\n    return this.x + this.width;\n  }\n\n  getTop() {\n    return this.y;\n  }\n\n  getOldBottom() {\n    return this.yOld + this.height;\n  }\n\n  getOldLeft() {\n    return this.xOld;\n  }\n\n  getOldRight() {\n    return this.xOld + this.width;\n  }\n\n  getOldTop() {\n    return this.yOld;\n  }\n\n  getCenterX() {\n    return this.x + this.width * 0.5;\n  }\n\n  getCenterY() {\n    return this.y + this.height * 0.5;\n  }\n\n  setBottom(y) {\n    this.y = y - this.height;\n  }\n\n  setLeft(x) {\n    this.x = x;\n  }\n\n  setRight(x) {\n    this.x = x - this.width;\n  }\n\n  setTop(y) {\n    this.y = y;\n  }\n\n  setOldBottom(y) {\n    this.yOld = y - this.height;\n  }\n\n  setOldLeft(x) {\n    this.xOld = x;\n  }\n\n  setOldRight(x) {\n    this.xOld = x - this.width;\n  }\n\n  setOldTop(y) {\n    this.yOld = y;\n  }\n\n  setCenterX(x) {\n    this.x = x - this.width * 0.5;\n  }\n\n  setCenterY(y) {\n    this.y = y - this.height * 0.5;\n  }\n}\n","import Object from \"./object\";\nimport Animator from \"./animator\";\nexport default class Player extends Object {\n  constructor() {\n    super(40, 100, 12, 12);\n    this.color = \"#ff0000\";\n    this.loaded = false;\n\n    this.running = false;\n    this.jumping = true;\n    this.firing = true;\n    this.velocityX = 0;\n    this.velocityY = 0;\n    this.direction = 1;\n\n    const keys = [\n      { id: \"Idle\", count: 10 },\n      { id: \"Run\", count: 8 },\n      { id: \"Jump\", count: 8 },\n      { id: \"Dead\", count: 8 },\n      { id: \"Fire\", count: 4 },\n    ];\n\n    this.frameSets = {};\n\n    this.loadCount = 0;\n    this.assetCount = 38 * 2;\n    keys.forEach(({ id, count }) => {\n      for (let index = 1; index <= count; index++) {\n        const onImgLoad = (e) => {\n          this.loadCount += 1;\n\n          if (this.assetCount === this.loadCount) {\n            this.loaded = true;\n          }\n        };\n\n        const imageLeft = new Image();\n        imageLeft.onload = onImgLoad;\n        const imageRight = new Image();\n        imageRight.onload = onImgLoad;\n        imageLeft.src = `./assets/sprites/player/left/${id} (${index}).webp`;\n        imageRight.src = `./assets/sprites/player/right/${id} (${index}).webp`;\n\n        const keyLeft = `${id.toLowerCase()}Left`;\n        const keyRight = `${id.toLowerCase()}Right`;\n\n        const addImage = (k, image) => {\n          if (!this.frameSets[k]) {\n            this.frameSets[k] = [];\n          }\n          this.frameSets[k].push(image);\n        };\n\n        addImage(keyLeft, imageLeft);\n        addImage(keyRight, imageRight);\n      }\n    });\n\n    this.animator = new Animator(this.frameSets[\"idleRight\"]);\n  }\n\n  reset() {\n    this.x = 40;\n    this.y = 100;\n    this.xOld = 40;\n    this.yOld = 100;\n    this.firing = false;\n    this.running = false;\n    this.jumping = false;\n    this.velocityX = 0;\n    this.velocityY = 0;\n    this.direction = 1;\n  }\n\n  jump() {\n    if (!this.jumping) {\n      this.jumping = true;\n      this.velocityY -= 18;\n    }\n  }\n\n  fire() {\n    if (!this.firing) {\n      this.firing = true;\n      setTimeout(() => {\n        this.firing = false;\n      }, 300);\n    }\n  }\n\n  moveLeft() {\n    this.direction = -1;\n    this.velocityX -= 0.5;\n  }\n  moveRight() {\n    this.direction = 1;\n    this.velocityX += 0.5;\n  }\n\n  updateAnimation({ dead = false }) {\n    if (dead) {\n      if (this.direction < 0) this.animator.changeFrameSet(this.frameSets[\"deadLeft\"], 2);\n      else this.animator.changeFrameSet(this.frameSets[\"deadRight\"], 2);\n\n      this.animator.animate(dead);\n      return;\n    }\n\n    if (this.velocityY < 0) {\n      if (this.direction < 0) {\n        this.animator.changeFrameSet(this.frameSets[\"jumpLeft\"], 2);\n      } else {\n        this.animator.changeFrameSet(this.frameSets[\"jumpRight\"], 2);\n      }\n    } else if (this.direction < 0) {\n      if (this.velocityX < -0.1) {\n        this.animator.changeFrameSet(this.frameSets[\"runLeft\"]);\n      } else {\n        if (this.firing) {\n          this.animator.changeFrameSet(this.frameSets[\"fireLeft\"], 2);\n        } else {\n          this.animator.changeFrameSet(this.frameSets[\"idleLeft\"]);\n        }\n      }\n    } else if (this.direction > 0) {\n      if (this.velocityX > 0.1) {\n        this.animator.changeFrameSet(this.frameSets[\"runRight\"]);\n      } else {\n        if (this.firing) {\n          this.animator.changeFrameSet(this.frameSets[\"fireRight\"], 2);\n        } else {\n          this.animator.changeFrameSet(this.frameSets[\"idleRight\"]);\n        }\n      }\n    }\n\n    this.animator.animate();\n  }\n\n  update(gravity, friction) {\n    this.xOld = this.x;\n    this.yOld = this.y;\n    this.velocityY += gravity;\n    this.x += this.velocityX;\n    this.y += this.velocityY;\n\n    this.velocityX *= friction;\n    this.velocityY *= friction;\n\n    const absVelocityX = Math.abs(this.velocityX);\n    this.running = absVelocityX === 0.435 ? false : absVelocityX >= 0.2;\n  }\n}\n","import Object from \"./object\";\n\nexport default class Portal extends Object {\n  constructor({ x, y, width, height, direction, destinationX, destinationY, destinationArea }) {\n    super(x, y, width, height);\n\n    this.direction = direction;\n    this.destinationX = destinationX;\n    this.destinationY = destinationY;\n    this.destinationArea = destinationArea;\n  }\n}\n","import Object from \"./object\";\nimport Animator from \"./animator\";\n\nexport default class Water {\n  constructor(waterObjects = [], tileSize) {\n    this.items = [];\n    this.loaded = false;\n\n    const keys = [{ id: \"\", count: 17 }];\n\n    this.frameSets = {};\n\n    this.assetCount = 17;\n    this.loadCount = 0;\n    keys.forEach(({ count }) => {\n      for (let index = 1; index <= count; index++) {\n        const image = new Image();\n        image.onload = () => {\n          this.loadCount += 1;\n\n          if (count === this.loadCount) {\n            this.loaded = true;\n          }\n        };\n        image.src = `./assets/sprites/water/image ${index}.webp`;\n\n        const addImage = (k, image) => {\n          if (!this.frameSets[k]) {\n            this.frameSets[k] = [];\n          }\n          this.frameSets[k].push(image);\n        };\n\n        addImage(\"water\", image);\n      }\n    });\n\n    for (let index = 0; index < waterObjects.length; index++) {\n      const { left, top } = waterObjects[index];\n\n      this.items.push(\n        new WaterObject(left * tileSize, top * tileSize, this.frameSets[\"water\"], tileSize),\n      );\n    }\n  }\n\n  update() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].updateAnimation();\n    }\n  }\n}\n\nclass WaterObject extends Object {\n  constructor(x, y, frameSet, tileSize) {\n    super(x, y, tileSize, tileSize);\n\n    this.animator = new Animator(frameSet, 3);\n  }\n\n  updateAnimation() {\n    this.animator.animate();\n  }\n}\n","import Coins from \"./coins\";\nimport Water from \"./water\";\nimport Player from \"./player\";\nimport Object from \"./object\";\nimport Portal from \"./portal\";\nimport Enemies from \"./enemies\";\nimport Collider from \"./collider\";\nimport Fireballs from \"./fireballs\";\nimport AudioController from \"../controller/audio\";\n\nexport default class World {\n  constructor(friction = 0.87, gravity = 2) {\n    this.friction = friction;\n    this.gravity = gravity;\n\n    this.rows = 12;\n    this.columns = 16;\n    this.tileSize = 16;\n\n    this.loaded = true;\n\n    this.totalCoins = 0;\n    this.totalEnemies = 0;\n    this.killedEnemies = \"\";\n    this.collectedCoins = \"\";\n    this.height = this.tileSize * this.rows;\n    this.width = this.tileSize * this.columns;\n\n    this.player = new Player();\n    this.collider = new Collider();\n    this.fireballs = new Fireballs();\n\n    this.audioController = new AudioController();\n  }\n\n  setup(data) {\n    if (this.theme !== data.theme) {\n      if (data.theme) {\n        this.playedThemeMusic = false;\n        this.audioController.load(\n          [\n            { file: \"fire\", ext: \"wav\" },\n            { file: \"coin\", ext: \"wav\" },\n            { file: \"foot\", ext: \"wav\" },\n            { file: \"jump\", ext: \"wav\" },\n            { file: \"hurt\", ext: \"wav\" },\n            { file: \"fall\", ext: \"mp3\" },\n            { file: data.theme, ext: \"mp3\" },\n          ],\n          (val) => {\n            this.loaded = val;\n          },\n        );\n\n        this.stopThemeMusic();\n        this.theme = data.theme;\n      }\n    }\n\n    this.id = data.id;\n    this.map = data.areaMap;\n    this.isPlayerDead = false;\n    this.objects = data.objectsMap;\n    this.collisonMap = data.collisonMap;\n\n    if (data.rows) {\n      this.rows = data.rows;\n      this.height = this.tileSize * this.rows;\n    }\n    if (data.columns) {\n      this.columns = data.columns;\n      this.width = this.tileSize * this.columns;\n    }\n\n    this.deathAreas = data.death.map(({ x, y, height, width }) => new Object(x, y, width, height));\n\n    this.enemies = new Enemies(data.enemies, this.tileSize, this.killedEnemies);\n\n    this.coins = new Coins(data.coins, this.tileSize, this.collectedCoins);\n\n    this.portals = data.portals.map((p) => new Portal(p));\n\n    this.water = new Water(data.water, this.tileSize);\n\n    this.fireballs.reset();\n\n    if (this.portal) {\n      this.player.setCenterX(this.portal.destinationX);\n      this.player.setCenterY(this.portal.destinationY);\n      this.player.direction = this.portal.direction;\n\n      this.portal = null;\n    }\n  }\n\n  reset() {\n    this.totalCoins = 0;\n    this.totalEnemies = 0;\n    this.killedEnemies = \"\";\n    this.collectedCoins = \"\";\n\n    this.player.reset();\n  }\n\n  playJumpSound() {\n    AudioController.play(\"jump\", \"wav\");\n  }\n\n  playFireSound() {\n    AudioController.play(\"fire\", \"wav\");\n  }\n\n  playThemeMusic() {\n    if (!this.theme) return;\n\n    this.audioController.play(this.theme, \"mp3\");\n    this.audioController.volume(this.theme, 8);\n    this.audioController.loop(this.theme);\n  }\n\n  stopThemeMusic() {\n    if (!this.theme) return;\n\n    this.audioController.stop(this.theme);\n  }\n\n  pauseThemeMusic() {\n    if (!this.theme) return;\n\n    this.audioController.pause(this.theme);\n  }\n\n  collideObject(object) {\n    if (object.getLeft() < 0 - this.player.width / 2) {\n      object.setLeft(-this.player.width / 2);\n      object.velocityX = 0;\n    } else if (object.getRight() > this.width + this.player.width / 2) {\n      object.setRight(this.width + this.player.width / 2);\n      object.velocityX = 0;\n    }\n    if (object.getTop() < 0 - this.player.height * 2.5) {\n      object.setTop(0 - this.player.height * 2.5);\n      object.velocityY = 0;\n    } else if (object.getBottom() - 1 > this.height) {\n      object.setBottom(this.height);\n      object.velocityY = 0;\n      object.jumping = false;\n    }\n\n    let bottom, left, right, top;\n\n    const setTop = () => {\n      top = this._normalizeIndex(Math.floor(object.getTop() / this.tileSize), this.rows);\n    };\n\n    const setBottom = () => {\n      bottom = this._normalizeIndex(Math.floor(object.getBottom() / this.tileSize), this.rows);\n    };\n\n    const setLeft = () => {\n      left = Math.floor(object.getLeft() / this.tileSize);\n    };\n\n    const setRight = () => {\n      right = Math.floor(object.getRight() / this.tileSize);\n    };\n\n    setTop();\n    setLeft();\n    this.collider.collide(\n      this.collisonMap[top][left],\n      object,\n      left * this.tileSize,\n      top * this.tileSize,\n      this.tileSize,\n    );\n\n    setTop();\n    setRight();\n    this.collider.collide(\n      this.collisonMap[top][right],\n      object,\n      right * this.tileSize,\n      top * this.tileSize,\n      this.tileSize,\n    );\n\n    setBottom();\n    setLeft();\n    this.collider.collide(\n      this.collisonMap[bottom][left],\n      object,\n      left * this.tileSize,\n      bottom * this.tileSize,\n      this.tileSize,\n    );\n\n    setBottom();\n    setRight();\n    this.collider.collide(\n      this.collisonMap[bottom][right],\n      object,\n      right * this.tileSize,\n      bottom * this.tileSize,\n      this.tileSize,\n    );\n  }\n\n  _normalizeIndex(index, maxIndex) {\n    if (index >= maxIndex - 1) {\n      return maxIndex - 1;\n    } else if (index < 0) {\n      return 0;\n    }\n\n    return index;\n  }\n\n  checkCollision(object1, object2, offsetX = 0, offsetY = 0) {\n    if (\n      object1.x < object2.x + object2.width + offsetX &&\n      object1.x + object1.width > object2.x - offsetX &&\n      object1.y < object2.y + object2.height + offsetY &&\n      object1.y + object1.height > object2.y - offsetY\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  get assetCount() {\n    return (\n      this.coins.assetCount +\n      this.water.assetCount +\n      this.player.assetCount +\n      this.enemies.assetCount +\n      this.fireballs.assetCount\n    );\n  }\n\n  get loadCount() {\n    return (\n      this.coins.loadCount +\n      this.water.loadCount +\n      this.player.loadCount +\n      this.enemies.loadCount +\n      this.fireballs.loadCount\n    );\n  }\n\n  isLoaded() {\n    return this.loaded && this.isAssetsLoaded();\n  }\n\n  isAssetsLoaded() {\n    return (\n      this.coins.loaded &&\n      this.water.loaded &&\n      this.player.loaded &&\n      this.enemies.loaded &&\n      this.fireballs.loaded\n    );\n  }\n\n  onPlayerDead(onGameOver, audio = \"fall\") {\n    if (!this.isPlayerDead) {\n      AudioController.play(audio, \"mp3\");\n\n      this.player.velocityX = 0;\n      this.stopThemeMusic();\n      onGameOver();\n    }\n    this.isPlayerDead = true;\n    this.collectedCoins = \"\";\n    this.killedEnemies = \"\";\n    this.theme = null;\n  }\n\n  update(onGameOver) {\n    AudioController.animate(() => {\n      AudioController.play(\"foot\", \"wav\", 0.15);\n    }, this.player.running);\n\n    if (!this.playedThemeMusic) {\n      if (this.isLoaded()) {\n        this.playThemeMusic();\n        this.playedThemeMusic = true;\n      }\n    }\n\n    this.player.update(this.gravity, this.friction);\n\n    this.collideObject(this.player);\n\n    // coins\n    for (let index = 0; index < this.coins.items.length; index++) {\n      const coin = this.coins.items[index];\n\n      coin.update();\n      coin.updateAnimation();\n\n      if (this.checkCollision(this.player, coin, 5, 5)) {\n        this.coins.remove(coin);\n\n        this.collectedCoins += `${coin.id},`;\n\n        AudioController.play(\"coin\");\n        this.totalCoins += 1;\n      }\n    }\n\n    // fireballs\n    for (let index = 0; index < this.fireballs.items.length; index++) {\n      const fireball = this.fireballs.items[index];\n\n      fireball.update();\n      fireball.updateAnimation(this.player);\n\n      for (let j = 0; j < this.enemies.items.length; j++) {\n        const enemy = this.enemies.items[j];\n\n        if (this.checkCollision(enemy, fireball)) {\n          this.enemies.remove(enemy);\n\n          this.killedEnemies += `${enemy.id},`;\n          this.totalEnemies += 1;\n\n          AudioController.play(\"hurt\");\n        }\n      }\n\n      if (fireball.x >= this.width + 50) {\n        this.fireballs.remove(fireball);\n      }\n    }\n\n    if (!this.isPlayerDead) {\n      for (let index = 0; index < this.deathAreas.length; index++) {\n        if (this.checkCollision(this.player, this.deathAreas[index])) {\n          this.onPlayerDead(onGameOver);\n          break;\n        }\n      }\n    }\n\n    // enemies\n    if (!this.isPlayerDead) {\n      for (let index = 0; index < this.enemies.items.length; index++) {\n        const enemy = this.enemies.items[index];\n\n        if (this.checkCollision(this.player, enemy)) {\n          this.onPlayerDead(onGameOver);\n          break;\n        }\n\n        enemy.update();\n        enemy.updateAnimation();\n      }\n    }\n\n    if (!this.portal) {\n      for (let index = 0; index < this.portals.length; index++) {\n        if (this.checkCollision(this.player, this.portals[index])) {\n          this.portal = this.portals[index];\n          break;\n        }\n      }\n    }\n\n    this.player.updateAnimation({ dead: this.isPlayerDead });\n\n    this.water.update();\n  }\n}\n","import TileSet from \"./tileset\";\n\nexport default class Screen {\n  constructor(canvas, world) {\n    this.buffer = canvas.getContext(\"2d\");\n    this.canvas = canvas;\n\n    this.tileSet = new TileSet(16, 8, world);\n  }\n\n  drawMap(map) {\n    const { images, tileSize } = this.tileSet;\n\n    const drawTile = (x, y, value) => {\n      const image = images[value];\n\n      let destinationX = x * tileSize;\n      let destinationY = y * tileSize;\n\n      this.buffer.drawImage(image, destinationX, destinationY, tileSize, tileSize);\n    };\n\n    for (let i = 0; i < map.length; i++) {\n      const row = map[i];\n      for (let j = 0; j < row.length; j++) {\n        const value = row[j];\n\n        if (value) {\n          if (Array.isArray(value)) {\n            for (let index = 0; index < value.length; index++) {\n              drawTile(j, i, value[index]);\n            }\n          } else {\n            drawTile(j, i, value);\n          }\n        }\n      }\n    }\n  }\n\n  drawArea(object) {\n    for (let index = 0; index < object.length; index++) {\n      const { x, y, width, height } = object[index];\n      this.buffer.fillRect(x, y, width, height);\n    }\n  }\n\n  drawMapObjects(objects) {\n    const { objectImages, tileSize } = this.tileSet;\n\n    for (let i = 0; i < objects.length; i++) {\n      const row = objects[i];\n      for (let j = 0; j < row.length; j++) {\n        const value = row[j];\n\n        if (value) {\n          value.forEach((element) => {\n            const { id, xOffset = 0, yOffset = 0, width = 16, height = 16 } = element;\n            const image = objectImages[id];\n\n            let destinationX = j * tileSize;\n            let destinationY = i * tileSize;\n\n            this.buffer.drawImage(\n              image,\n              destinationX + xOffset,\n              destinationY + yOffset,\n              width,\n              height,\n            );\n          });\n        }\n      }\n    }\n  }\n\n  drawBackground() {\n    this.buffer.drawImage(\n      this.tileSet.tileBackground,\n      0,\n      0,\n      this.buffer.canvas.width,\n      this.buffer.canvas.height,\n    );\n  }\n\n  drawText(text, x, y, color = \"black\") {\n    this.buffer.fillStyle = color;\n    this.buffer.font = \"10px Arial\";\n    this.buffer.fillText(text, x, y);\n  }\n\n  drawPlayer(image, destinationX, destinationY, width, height, offsetX, offsetY, rect) {\n    this.drawObject(image, destinationX + offsetX, destinationY + offsetY + 1, width, height);\n  }\n\n  drawDino(image, destinationX, destinationY, width, height, offsetX, offsetY, rect) {\n    this.drawObject(image, destinationX + offsetX, destinationY + offsetY + 1, width, height);\n  }\n\n  drawObject(image, destinationX, destinationY, width, height, offsetX = 0, offsetY = 0) {\n    this.buffer.drawImage(image, destinationX + offsetX, destinationY + offsetY, width, height);\n  }\n\n  drawRect({ x, y, width, height }) {\n    this.buffer.fillRect(x, y, width, height);\n  }\n\n  get assetCount() {\n    return this.tileSet.assetCount;\n  }\n\n  get loadCount() {\n    return this.tileSet.loadCount;\n  }\n\n  isLoaded() {\n    return this.tileSet.loaded;\n  }\n\n  getContainSize(parentWidth, parentHeight, childWidth, childHeight) {\n    const contains = true;\n    const doRatio = childWidth / childHeight;\n    const cRatio = parentWidth / parentHeight;\n    let width = parentWidth;\n    let height = parentHeight;\n\n    if (contains ? doRatio > cRatio : doRatio < cRatio) {\n      height = width / doRatio;\n    } else {\n      width = height * doRatio;\n    }\n\n    return [width, height];\n  }\n\n  resize(ww, wh, gW, gH) {\n    const [width] = this.getContainSize(ww, wh, gW, gH);\n\n    const scale = window.devicePixelRatio;\n\n    document.documentElement.style.setProperty(\"--canvas-height\", gH + \"px\");\n    document.documentElement.style.setProperty(\"--canvas-width\", gW + \"px\");\n\n    this.canvas.style.height = `var(--canvas-height, ${gH}px)`;\n    this.canvas.style.width = `var(--canvas-width, ${gW}px)`;\n    this.canvas.height = Math.floor(gH * scale * scale);\n    this.canvas.width = Math.floor(gW * scale * scale);\n    this.buffer.scale(scale, scale);\n\n    const cssScale = width / gW;\n\n    document.documentElement.style.setProperty(\"--canvas-scale\", cssScale);\n    this.canvas.style.transform = `scale(var(--canvas-scale, ${cssScale}))`;\n\n    this.buffer.webkitImageSmoothingEnabled = false;\n    this.buffer.mozImageSmoothingEnabled = false;\n    this.buffer.imageSmoothingEnabled = false;\n  }\n\n  render() {\n    this.buffer.drawImage(\n      this.buffer.canvas,\n      0,\n      0,\n      this.buffer.canvas.width,\n      this.buffer.canvas.height,\n      0,\n      0,\n      this.buffer.canvas.width,\n      this.buffer.canvas.height,\n    );\n  }\n}\n","export default class TileSet {\n  constructor(tileSize, columns, world = 1) {\n    const worldKey = `world-${world}`;\n    this.loaded = false;\n    this.columns = columns;\n    this.tileSize = tileSize;\n\n    this.images = [];\n    this.images.push(null);\n\n    this.objectImages = [];\n    this.objectImages.push(null);\n\n    this.tileBackground = new Image();\n\n    const meta = {\n      1: { objectLen: 11, tileLen: 18 },\n      2: { objectLen: 10, tileLen: 18 },\n      3: { objectLen: 15, tileLen: 16 },\n      4: { objectLen: 14, tileLen: 16 },\n      5: { objectLen: 12, tileLen: 25 },\n    };\n\n    this.loadCount = 0;\n    this.assetCount = meta[world].objectLen + meta[world].tileLen + 1;\n    const onImgLoad = (e) => {\n      this.loadCount += 1;\n\n      if (this.assetCount === this.loadCount) {\n        this.loaded = true;\n      }\n    };\n\n    for (let index = 1; index <= meta[world].objectLen; index++) {\n      const image = new Image();\n      image.onload = onImgLoad;\n      image.src = `./assets/sprites/${worldKey}/objects/${index}.png`;\n\n      this.objectImages.push(image);\n    }\n\n    for (let index = 1; index <= meta[world].tileLen; index++) {\n      const image = new Image();\n      image.onload = onImgLoad;\n      image.src = `./assets/sprites/${worldKey}/tiles/${index}.png`;\n\n      this.images.push(image);\n    }\n\n    this.tileBackground.src = `./assets/sprites/${worldKey}/bg.png`;\n    this.tileBackground.onload = onImgLoad;\n  }\n}\n","export const uid = () => {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n};\n\nexport const setData = (key, value) => {\n  return localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport const getData = (key) => {\n  return JSON.parse(localStorage.getItem(key));\n};\n\nexport const preLoadAndFetch = () => {\n  const items = {\n    sprites: [\n      { rel: \"prefetch\", key: \"world-1\", objects: 11, tiles: 18 },\n      { rel: \"prefetch\", key: \"world-2\", objects: 10, tiles: 18 },\n      { rel: \"prefetch\", key: \"world-3\", objects: 15, tiles: 16 },\n      { rel: \"prefetch\", key: \"world-4\", objects: 14, tiles: 16 },\n      { rel: \"prefetch\", key: \"world-5\", objects: 12, tiles: 25 },\n    ],\n    player: [\n      { rel: \"prefetch\", key: \"Dead\", objects: 8 },\n      { rel: \"prefetch\", key: \"Idle\", objects: 10 },\n      { rel: \"prefetch\", key: \"Jump\", objects: 8 },\n      { rel: \"prefetch\", key: \"Run\", objects: 8 },\n    ],\n    water: [{ rel: \"prefetch\", objects: 17 }],\n    coin: [{ rel: \"prefetch\", objects: 16 }],\n  };\n\n  const body = document.getElementsByTagName(\"head\")[0];\n\n  const append = (href, rel, as = \"image\") => {\n    const item = document.createElement(\"link\");\n\n    item.as = as;\n    item.rel = rel;\n    item.href = href;\n    body.prepend(item);\n  };\n\n  items.sprites.forEach(({ rel, key, objects, tiles }) => {\n    for (let index = 1; index <= objects; index++) {\n      append(`./assets/sprites/${key}/objects/${index}.png`, rel);\n    }\n    for (let index = 1; index <= tiles; index++) {\n      append(`./assets/sprites/${key}/tiles/${index}.png`, rel);\n    }\n\n    append(`./assets/sprites/${key}/bg.png`, rel);\n  });\n\n  items.player.forEach(({ rel, key, objects }) => {\n    for (let index = 1; index <= objects; index++) {\n      append(`./assets/sprites/player/left/${key} (${index}).webp`, rel);\n      append(`./assets/sprites/player/right/${key} (${index}).webp`, rel);\n    }\n  });\n\n  items.water.forEach(({ rel, objects }) => {\n    for (let index = 1; index <= objects; index++) {\n      append(`./assets/sprites/water/image ${index}.webp`, rel);\n    }\n  });\n\n  items.coin.forEach(({ rel, objects }) => {\n    for (let index = 1; index <= objects; index++) {\n      append(`./assets/sprites/coin/image ${index}.webp`, rel);\n    }\n  });\n\n  const audioFiles = [\n    { rel: \"preload\", file: \"grasslands\" },\n    { rel: \"preload\", file: \"coin\", ext: \"wav\" },\n    { rel: \"preload\", file: \"jump\", ext: \"wav\" },\n    { rel: \"preload\", file: \"fall\", ext: \"mp3\" },\n    { rel: \"preload\", file: \"iceland\" },\n    { rel: \"preload\", file: \"desert\" },\n    { rel: \"preload\", file: \"dungeon\" },\n  ];\n\n  audioFiles.forEach(({ rel, file, ext = \"mp3\" }) => {\n    if (rel === \"preload\") {\n      const audio = new Audio();\n      audio.url = `./assets/audio/${file}.${ext}`;\n    } else {\n      append(`./assets/audio/${file}.${ext}`, rel, \"audio\");\n    }\n  });\n};\n\nexport const populatePortals = (onPortalClick) => {\n  const data = [\n    { name: \"Grassland 1\", id: 1, areaNum: 1, left: 40, top: 100, ss: \"images/area_1.png\" },\n    { name: \"Grassland 2\", id: 2, areaNum: 2, left: 40, top: 100, ss: \"images/area_2.png\" },\n    { name: \"Grassland 3\", id: 7, areaNum: 3, left: 40, top: 120, ss: \"images/area_3.png\" },\n    { name: \"Iceland 1\", id: 3, areaNum: 4, left: 48, top: 100, ss: \"images/area_4.png\" },\n    { name: \"Iceland 2\", id: 8, areaNum: 5, left: 32, top: 20, ss: \"images/area_5.png\" },\n  ];\n\n  const portalsWrapper = document.getElementById(\"portalsWrapper\");\n  portalsWrapper.className += \"modal-content-wrapper\";\n\n  const itemWrapper = document.createElement(\"div\");\n  itemWrapper.classList.add(\"portal-item-wrapper\");\n\n  data.forEach((value) => {\n    const { name, ss } = value;\n\n    const div = document.createElement(\"div\");\n    div.className += \"portal-item\";\n\n    const title = document.createElement(\"div\");\n    title.className += \"portal-title\";\n    title.textContent = name;\n\n    const overlay = document.createElement(\"div\");\n    overlay.className += \"portal-overlay\";\n\n    const img = document.createElement(\"img\");\n    img.src = ss;\n    img.className += \"portal-item portal-img\";\n    img.addEventListener(\"click\", () => onPortalClick(value));\n\n    div.appendChild(img);\n    div.appendChild(overlay);\n    div.appendChild(title);\n    itemWrapper.appendChild(div);\n  });\n\n  portalsWrapper.appendChild(itemWrapper);\n};\n\nexport const populateLinks = () => {\n  const links = [\n    {\n      className: \"btn gh-btn social-btn btn-tut\",\n      style: \"margin-left: 0px\",\n      link: \"https://github.com/AKAspanion\",\n    },\n    {\n      className: \"btn li-btn social-btn btn-tut\",\n      style: \"\",\n      link: \"https://www.linkedin.com/in/spanion/\",\n    },\n    {\n      className: \"btn in-btn social-btn btn-tut\",\n      style: \"\",\n      link: \"https://www.instagram.com/spanionkumar/\",\n    },\n    {\n      className: \"btn fb-btn social-btn btn-tut\",\n      style: \"\",\n      link: \"https://www.facebook.com/AKAspanion/\",\n    },\n  ];\n\n  const linksWrapper = document.getElementById(\"linksWrapper\");\n  linksWrapper.className += \"flex-item\";\n\n  links.forEach(({ link, style, className }) => {\n    const a = document.createElement(\"a\");\n    a.className += className;\n    a.target = \"_blank\";\n    a.style = style;\n    a.href = link;\n\n    linksWrapper.appendChild(a);\n  });\n};\n\nexport const populateHelp = () => {\n  const helpItems = [\n    {\n      name: \"Mobile\",\n      content: [\n        {\n          items: [\n            { className: \"btn left-btn btn-tut\", text: \"to run left\" },\n            { className: \"btn right-btn btn-tut\", text: \"to run right\", notap: true },\n          ],\n        },\n        {\n          items: [\n            { className: \"btn fire-btn btn-tut flex-item\", text: \"to spit fire\", child: \"⚪️\" },\n          ],\n        },\n        {\n          items: [{ className: \"btn jump-btn btn-tut\", text: \"to jump\" }],\n        },\n      ],\n    },\n    {\n      name: \"Desktop\",\n      content: [\n        {\n          items: [\n            { className: \"btn left-key-btn btn-tut key-btn\", text: \"to run left\" },\n            { className: \"btn right-key-btn btn-tut key-btn\", text: \"to run right\", notap: true },\n          ],\n        },\n        {\n          items: [\n            { className: \"btn fire-key-btn btn-tut flex-item key-btn\", text: \"to spit fire\" },\n          ],\n        },\n        {\n          items: [{ className: \"btn jump-key-btn btn-tut key-btn\", text: \"to jump\" }],\n        },\n      ],\n    },\n  ];\n\n  const helpWrapper = document.getElementById(\"helpWrapper\");\n  helpWrapper.className += \"modal-content-wrapper\";\n\n  helpItems.forEach(({ name, content }) => {\n    const modalContent = document.createElement(\"div\");\n    modalContent.className += \"flex-item modal-content\";\n\n    const modalhead = document.createElement(\"div\");\n    modalhead.className += \"modal-content-head\";\n    modalhead.textContent = name;\n\n    const modalContentDesc = document.createElement(\"div\");\n    modalContentDesc.className += \"flex-item modal-content-desc\";\n\n    content.forEach(({ items }) => {\n      const flexItem = document.createElement(\"div\");\n      flexItem.className += \"flex-item\";\n\n      items.forEach(({ className, text, child, notap }) => {\n        if (!notap) {\n          flexItem.innerHTML += \"Tap\";\n        }\n\n        const btn = document.createElement(\"div\");\n        btn.className = className;\n\n        if (child) {\n          btn.textContent = child;\n        }\n\n        flexItem.appendChild(btn);\n\n        flexItem.innerHTML += text;\n      });\n\n      modalContentDesc.appendChild(flexItem);\n    });\n\n    modalContent.appendChild(modalhead);\n    modalContent.appendChild(modalContentDesc);\n\n    helpWrapper.appendChild(modalContent);\n  });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Game from \"./game\";\nimport Screen from \"./screen\";\nimport GameEngine from \"./engine\";\nimport Controller from \"./controller\";\nimport MouseInput from \"./controller/mouse-input\";\n\nimport {\n  uid,\n  getData,\n  setData,\n  populateHelp,\n  populateLinks,\n  populatePortals,\n  preLoadAndFetch,\n} from \"./util\";\n\npreLoadAndFetch();\npopulateLinks();\npopulateHelp();\n\nimport areas from \"./areas\";\n\nlet loadingActive = false;\nlet controllerActive = false;\nconst isTouchesEnabled = \"ontouchstart\" in document.documentElement;\n\nconst helpBtn = document.getElementById(\"helpBtn\");\nconst infoBtn = document.getElementById(\"infoBtn\");\nconst startBtn = document.getElementById(\"startBtn\");\nconst pauseBtn = document.getElementById(\"pauseBtn\");\nconst soundBtn = document.getElementById(\"soundBtn\");\nconst musicBtn = document.getElementById(\"musicBtn\");\nconst portalBtn = document.getElementById(\"portalBtn\");\nconst helpScreen = document.getElementById(\"helpScreen\");\nconst helpCloseBtn = document.getElementById(\"helpCloseBtn\");\nconst portalScreen = document.getElementById(\"portalScreen\");\nconst portalCloseBtn = document.getElementById(\"portalCloseBtn\");\nconst infoScreen = document.getElementById(\"infoScreen\");\nconst infoCloseBtn = document.getElementById(\"infoCloseBtn\");\nconst refreshBtn = document.getElementById(\"refreshBtn\");\nconst startTitle = document.getElementById(\"startTitle\");\nconst scoreTitle = document.getElementById(\"scoreTitle\");\nconst startScreen = document.getElementById(\"startScreen\");\nconst controllers = document.querySelectorAll(\".controller\");\nconst loadingScreen = document.getElementById(\"loadingScreen\");\nconst progressValue = document.getElementById(\"progressValue\");\nconst persistentControllers = document.querySelectorAll(\".persistent-controller\");\n\nconst toggleSoundBtn = (value) => {\n  soundBtn.classList[value ? \"add\" : \"remove\"](\"cancel-cross\");\n};\n\nconst toggleMusicBtn = (value) => {\n  musicBtn.classList[value ? \"add\" : \"remove\"](\"cancel-cross\");\n};\n\nconst toggleControllers = (value) => {\n  controllerActive = value;\n  controllers.forEach(\n    (controller) =>\n      (controller.style.visibility = isTouchesEnabled && value ? \"visible\" : \"hidden\"),\n  );\n  persistentControllers.forEach(\n    (controller) => (controller.style.visibility = value ? \"visible\" : \"hidden\"),\n  );\n};\n\nconst togglePortalScreen = (value) => {\n  portalScreen.style.visibility = !value ? \"hidden\" : \"visible\";\n};\n\nconst toggleHelpScreen = (value) => {\n  helpScreen.style.visibility = !value ? \"hidden\" : \"visible\";\n};\n\nconst toggleInfoScreen = (value) => {\n  infoScreen.style.visibility = !value ? \"hidden\" : \"visible\";\n};\n\nconst toggleStartScreen = (value) => {\n  startScreen.style.visibility = !value ? \"hidden\" : \"visible\";\n};\n\nconst toggleLoadingScreen = (value) => {\n  loadingActive = value;\n  loadingScreen.style.visibility = !value ? \"hidden\" : \"visible\";\n};\n\nconst setProgressValue = (value) => {\n  progressValue.style.width = `${value}%`;\n};\n\nwindow.addEventListener(\"load\", function () {\n  \"use strict\";\n\n  let areaId = 1;\n  let loaded = false;\n  let paused = false;\n  let areaNumber = 1;\n  let worldChanged = false;\n  const totalAreaNumber = 5;\n\n  toggleSoundBtn(getData(\"mute_sounds\"));\n  toggleMusicBtn(getData(\"mute_music\"));\n  clearInterval(loadInterval);\n  toggleLoadingScreen(false);\n  setProgressValue(0);\n\n  const controller = new Controller();\n\n  // GAME\n  const game = new Game((score) => {\n    startTitle.textContent = \"Game Over\";\n    scoreTitle.textContent = \"Score: \" + score;\n\n    const savedScore = getData(\"high_score\") || 0;\n    const highScore = savedScore < score ? score : savedScore;\n    setData(\"high_score\", savedScore < score ? score : savedScore);\n\n    if (highScore) {\n      document.getElementById(\"highScore\").innerHTML = `High Score: ${highScore}`;\n    }\n\n    setTimeout(() => {\n      toggleStartScreen(true);\n    }, 1500);\n  });\n\n  const setupWorld = () => {\n    game.world.setup(areas[areaId]);\n  };\n\n  // SCREEN\n  let screen;\n\n  // resize game window\n  const resize = () => {\n    let width = document.documentElement.clientWidth;\n    let height = document.documentElement.clientHeight;\n    let gWidth = game.world.width;\n    let gHeight = game.world.height;\n\n    if (width <= 480) {\n      [width, height] = [height, width];\n      [gWidth, gHeight] = [gHeight, gWidth];\n    }\n\n    screen.resize(width, height, game.world.width, game.world.height);\n    screen.render();\n  };\n\n  const setupScreen = () => {\n    screen = new Screen(document.querySelector(\"canvas\"), areas[areaId].world);\n\n    screen.buffer.canvas.height = game.world.height;\n    screen.buffer.canvas.width = game.world.width;\n    resize();\n  };\n\n  setupScreen();\n\n  // GAME ENGINE\n\n  const loadPercent = () => {\n    const totalAssets = (worldChanged ? 0 : game.world.assetCount) + screen.assetCount;\n    const totalLoaded = (worldChanged ? 0 : game.world.loadCount) + screen.loadCount;\n\n    return Math.round((totalLoaded / totalAssets) * 100);\n  };\n\n  const isLoaded = () => {\n    return game.isLoaded() && screen.isLoaded();\n  };\n\n  // update game logic\n  const update = () => {\n    loaded = isLoaded();\n    const loadValue = loadPercent();\n\n    const { player, portal } = game.world;\n\n    if (loadValue < 100) {\n      setProgressValue(loadValue == 99 ? 100 : loadValue);\n    }\n\n    if (!loaded) {\n      if (controllerActive) {\n        toggleControllers(false);\n      }\n      if (!loadingActive) {\n        toggleLoadingScreen(true);\n      }\n    } else {\n      if (loadingActive) {\n        toggleLoadingScreen(false);\n        setProgressValue(0);\n      }\n      if (!controllerActive) {\n        toggleControllers(true);\n      }\n    }\n\n    if (!game.over && loaded && !paused) {\n      if (controller.left.active) {\n        player.moveLeft();\n      }\n      if (controller.right.active) {\n        player.moveRight();\n      }\n      if (controller.up.active) {\n        if (!player.jumping) {\n          game.world.playJumpSound();\n        }\n        player.jump();\n        controller.up.active = false;\n      }\n      if (controller.fire.active && !player.firing) {\n        const { fireballs } = game.world;\n        const offsetX = player.direction < 0 ? -32 : 8;\n\n        player.fire();\n        game.world.playFireSound();\n        fireballs.add(uid(), player.x + offsetX, player.y - 16, player.direction);\n        controller.fire.active = false;\n      }\n    }\n\n    if (portal) {\n      worldChanged = true;\n      engine.hold();\n\n      const { direction, destinationArea } = portal;\n      if (destinationArea !== areaId) {\n        if (direction < 0) {\n          areaNumber--;\n        } else {\n          areaNumber++;\n        }\n\n        if (areaNumber >= totalAreaNumber) {\n          areaNumber = 1;\n        }\n        if (areaNumber <= 0) {\n          areaNumber = totalAreaNumber;\n        }\n      }\n\n      areaId = destinationArea;\n\n      setupWorld();\n      setupScreen();\n\n      engine.resume();\n    }\n\n    game.update();\n  };\n\n  // render assets\n  const render = () => {\n    screen.drawBackground();\n\n    const {\n      map,\n      coins,\n      water,\n      player,\n      columns,\n      objects,\n      enemies,\n      fireballs,\n      totalCoins,\n      totalEnemies,\n    } = game.world;\n\n    // draw water animations\n    if (water) {\n      for (let index = 0; index < water.items.length; index++) {\n        const waterItem = water.items[index];\n\n        screen.drawObject(\n          waterItem.animator.frameValue,\n          waterItem.x,\n          waterItem.y,\n          waterItem.width,\n          waterItem.height,\n          waterItem.offsetX,\n          waterItem.offsetY,\n        );\n      }\n    }\n\n    screen.drawMap(map);\n    screen.drawMapObjects(objects);\n    // screen.drawArea(game.world.portals);\n    // screen.drawArea(game.world.deathAreas);\n    // screen.drawArea(game.world.enemies.items);\n\n    // draw coins\n    if (coins) {\n      for (let index = 0; index < coins.items.length; index++) {\n        const coin = coins.items[index];\n\n        screen.drawObject(\n          coin.animator.frameValue,\n          coin.x,\n          coin.y,\n          coin.width,\n          coin.height,\n          coin.offsetX,\n          coin.offsetY,\n        );\n        // screen.drawText(coin.id, coin.x, coin.y);\n        // screen.drawRect(coin);\n      }\n    }\n\n    // draw fireballs\n    if (fireballs) {\n      for (let index = 0; index < fireballs.items.length; index++) {\n        const fireball = fireballs.items[index];\n\n        screen.drawObject(\n          fireball.animator.frameValue,\n          fireball.x,\n          fireball.y,\n          fireball.width,\n          fireball.height,\n        );\n      }\n    }\n\n    // draw enemies\n    if (enemies) {\n      for (let index = 0; index < enemies.items.length; index++) {\n        const enemy = enemies.items[index];\n\n        screen.drawObject(\n          enemy.animator.frameValue,\n          enemy.x,\n          enemy.y,\n          enemy.width,\n          enemy.height,\n          0,\n          1,\n        );\n      }\n    }\n\n    // draw player\n    const dead = game.world.isPlayerDead;\n    const deadOffset = dead ? (player.direction < 0 ? 12 : -12) : 0;\n    const xOffset = player.direction < 0 ? -36 + deadOffset : -12 + deadOffset;\n    screen.drawPlayer(\n      player.animator.frameValue,\n      player.getLeft(),\n      player.getTop(),\n      60,\n      40,\n      xOffset,\n      -24,\n    );\n\n    // draw coin count\n    const image = new Image();\n    image.src = \"./assets/sprites/coin/image 1.webp\";\n    const coinTextOffest = totalCoins >= 10 && totalCoins <= 99 ? 3 : totalCoins > 99 ? 3.4 : 2.7;\n\n    screen.drawObject(image, (columns - 1.3) * 16, 8, 10, 10);\n    screen.drawText(\"x\", (columns - 2) * 16, 15);\n    screen.drawText(totalCoins, (columns - coinTextOffest) * 16, 16.1);\n\n    screen.drawText(areaNumber, 48, 15.3);\n    screen.drawText(\"Area\", 12, 15.3);\n    screen.drawText(\"x\", 38, 15);\n\n    const score = totalEnemies * 100 + totalCoins * 20;\n    const scoreTextOffest = score >= score >= 10 && score <= 99 ? 3 : score > 99 ? 3.4 : 2.7;\n    screen.drawText(score, (columns - scoreTextOffest) * 9, 15.3);\n\n    screen.render();\n  };\n\n  resize();\n\n  var engine = new GameEngine(1000 / 30, update, render);\n\n  // EVENTS HANDLER\n  const keyDownUp = ({ type, keyCode }) => {\n    controller.keyDownUp(type, keyCode);\n  };\n\n  window.addEventListener(\"keydown\", keyDownUp);\n  window.addEventListener(\"keyup\", keyDownUp);\n  window.addEventListener(\"resize\", resize);\n\n  const leftMouse = new MouseInput(\"leftBtn\", (e) => {\n    clearMouse();\n    controller.keyDownUp(e, 37);\n  });\n  const rightMouse = new MouseInput(\"rightBtn\", (e) => {\n    clearMouse();\n    controller.keyDownUp(e, 39);\n  });\n  const upMouse = new MouseInput(\"jumpBtn\", (e) => {\n    clearMouse();\n    controller.keyDownUp(e, 32);\n  });\n\n  const fireMouse = new MouseInput(\"fireBtn\", (e) => {\n    clearMouse();\n    controller.keyDownUp(e, 13);\n  });\n\n  const clearMouse = () => {\n    upMouse.actions.clear();\n    fireMouse.actions.clear();\n    leftMouse.actions.clear();\n    rightMouse.actions.clear();\n  };\n\n  const loadWorld = (id = 1, areaNum = 1, left = 40, top = 100, refresh = false) => {\n    clearMouse();\n    startTitle.textContent = \"\";\n    scoreTitle.textContent = \"\";\n    toggleStartScreen(false);\n\n    const start = () => {\n      game.world.reset();\n      game.over = false;\n\n      engine.hold();\n\n      game.world.player.setLeft(left);\n      game.world.player.setTop(top);\n\n      areaId = id;\n      areaNumber = areaNum;\n\n      setupWorld();\n      setupScreen();\n\n      resize();\n\n      engine.resume();\n    };\n\n    if (paused) {\n      paused = false;\n\n      game.world.playThemeMusic();\n      startBtn.textContent = \"play\";\n\n      if (refresh) {\n        start();\n      }\n    } else {\n      start();\n    }\n\n    if (!engine.started) {\n      engine.start();\n    }\n  };\n\n  const onPortalClick = ({ id, areaNum, left, top }) => {\n    togglePortalScreen(false);\n    loadWorld(id, areaNum, left, top, true);\n  };\n\n  populatePortals(onPortalClick);\n\n  startBtn.onclick = () => {\n    loadWorld();\n  };\n\n  pauseBtn.onclick = () => {\n    clearMouse();\n    toggleStartScreen(true);\n\n    game.world.pauseThemeMusic();\n    startBtn.textContent = \"resume\";\n\n    paused = true;\n  };\n\n  refreshBtn.onclick = () => {\n    areaNumber = 1;\n    startBtn.click();\n  };\n\n  soundBtn.onclick = () => {\n    const isMuted = !getData(\"mute_sounds\");\n\n    setData(\"mute_sounds\", isMuted);\n    toggleSoundBtn(isMuted);\n  };\n\n  musicBtn.onclick = () => {\n    const isMuted = !getData(\"mute_music\");\n\n    setData(\"mute_music\", isMuted);\n    toggleMusicBtn(isMuted);\n  };\n\n  portalBtn.onclick = () => {\n    togglePortalScreen(true);\n  };\n\n  helpBtn.onclick = () => {\n    toggleHelpScreen(true);\n  };\n\n  helpCloseBtn.onclick = () => {\n    toggleHelpScreen(false);\n  };\n\n  portalCloseBtn.onclick = () => {\n    togglePortalScreen(false);\n  };\n\n  infoBtn.onclick = () => {\n    toggleInfoScreen(true);\n  };\n\n  infoCloseBtn.onclick = () => {\n    toggleInfoScreen(false);\n  };\n\n  document.addEventListener(\"visibilitychange\", function () {\n    if (document.visibilityState === \"visible\") {\n      if (!paused) {\n        game.world.playThemeMusic();\n      }\n    } else {\n      game.world.pauseThemeMusic();\n    }\n  });\n\n  // startBtn.click();\n});\n"],"names":["image"],"sourceRoot":""}