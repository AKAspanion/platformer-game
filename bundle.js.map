{"version":3,"sources":["webpack://platformer-game/./app/areas/index.js","webpack://platformer-game/./app/controller/audio.js","webpack://platformer-game/./app/controller/index.js","webpack://platformer-game/./app/controller/input.js","webpack://platformer-game/./app/engine/index.js","webpack://platformer-game/./app/game/animator.js","webpack://platformer-game/./app/game/coin.js","webpack://platformer-game/./app/game/coins.js","webpack://platformer-game/./app/game/collider.js","webpack://platformer-game/./app/game/index.js","webpack://platformer-game/./app/game/object.js","webpack://platformer-game/./app/game/player.js","webpack://platformer-game/./app/game/portal.js","webpack://platformer-game/./app/game/water.js","webpack://platformer-game/./app/game/world.js","webpack://platformer-game/./app/index.js","webpack://platformer-game/./app/screen/index.js","webpack://platformer-game/./app/screen/tileset.js","webpack://platformer-game/webpack/bootstrap","webpack://platformer-game/webpack/runtime/define property getters","webpack://platformer-game/webpack/runtime/hasOwnProperty shorthand","webpack://platformer-game/webpack/runtime/make namespace object","webpack://platformer-game/webpack/startup"],"names":["AudioController","this","audios","key","ext","Audio","play","Controller","up","left","right","type","keyCode","down","getInput","Input","active","GameEngine","timeStep","update","render","pause","updated","time","extraTime","animationFrameRequest","engineLoop","t","loop","timeStamp","window","requestAnimationFrame","performance","now","cancelAnimationFrame","Animator","frameSet","delay","count","frameIndex","frameValue","last","length","Coin","x","y","offsetX","offsetY","super","baseX","baseY","positionX","Math","random","PI","positionY","animator","cos","sin","animate","items","objects","tileSize","frameSets","id","forEach","index","image","Image","src","k","push","addImage","top","updateAnimation","Collider","value","object","tileX","tileY","router","direction","collidePlatformTop","collidePlatformBottom","collidePlatformLeft","collidePlatformRight","flag","keys","split","bottomTile","getTop","getOldTop","setTop","velocityY","leftTile","getRight","getOldRight","setRight","velocityX","rightTile","getLeft","getOldLeft","setLeft","topTile","getBottom","getOldBottom","setBottom","jumping","Game","world","over","onGameOver","Object","width","height","xOld","yOld","Player","color","imageLeft","imageRight","keyLeft","toLowerCase","keyRight","dead","changeFrameSet","gravity","friction","Portal","destinationX","destinationY","destinationArea","Water","waterObjects","WaterObject","World","rows","columns","coins","totalSnacks","player","collider","audioController","data","map","areaMap","objectsMap","collisonMap","deathAreas","death","portals","p","water","portal","setCenterX","setCenterY","bottom","_normalizeIndex","floor","collide","maxIndex","object1","object2","collideObject","coin","checkCollision","splice","indexOf","undefined","isPlayerDead","addEventListener","areaId","controller","game","setupWorld","setup","screen","setupScreen","document","querySelector","buffer","canvas","resize","documentElement","clientWidth","clientHeight","engine","moveLeft","moveRight","jump","hold","resume","drawBackground","drawMap","drawMapObjects","drawObject","waterItem","drawPlayer","drawRect","start","keyDownUp","Screen","createElement","getContext","context","tileSet","images","i","row","j","drawImage","fillRect","objectImages","element","xOffset","yOffset","tileBackground","rect","ratio","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","imageSmoothingEnabled","TileSet","worldKey","meta","1","objectLen","tileLen","2","3","4","5","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"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","file":"bundle.js","sourcesContent":["import area1 from \"./area-1.json\";\nimport area2 from \"./area-2.json\";\nimport area3 from \"./area-3.json\";\nimport area4 from \"./area-4.json\";\nimport area5 from \"./area-5.json\";\nimport area6 from \"./area-6.json\";\n\nexport default {\n  [area1.id]: area1,\n  [area2.id]: area2,\n  [area3.id]: area3,\n  [area3.id]: area3,\n  [area4.id]: area4,\n  [area5.id]: area5,\n  [area6.id]: area6,\n};\n","export default class AudioController {\n  constructor() {\n    this.audios = {};\n  }\n\n  play(key, ext = \"wav\") {\n    if (!this.audios[key]) {\n      this.audios[key] = new Audio(`./assets/audio/${key}.${ext}`);\n    }\n\n    this.audios[key].play();\n  }\n}\n","import Input from \"./input\";\n\nexport default class Controller {\n  constructor() {\n    this.up = new Input();\n    this.left = new Input();\n    this.right = new Input();\n  }\n\n  keyDownUp(type, keyCode) {\n    let down = type == \"keydown\" ? true : false;\n\n    switch (keyCode) {\n      case 37:\n        this.left.getInput(down);\n        break;\n      case 38:\n        this.up.getInput(down);\n        break;\n      case 32:\n        this.up.getInput(down);\n        break;\n      case 39:\n        this.right.getInput(down);\n    }\n  }\n}\n","export default class Input {\n  constructor() {\n    this.down = false;\n    this.active = false;\n  }\n\n  getInput(down) {\n    if (this.down != down) this.active = down;\n    this.down = down;\n  }\n}\n","export default class GameEngine {\n  constructor(timeStep, update, render) {\n    this.timeStep = timeStep;\n    this.update = update;\n    this.render = render;\n\n    this.pause = false;\n\n    this.updated = false;\n\n    this.time = null;\n    this.extraTime = 0;\n    this.animationFrameRequest = null;\n    this.engineLoop = (t) => this.loop(t);\n  }\n\n  loop(timeStamp) {\n    if (this.pause) {\n      return;\n    }\n\n    this.animationFrameRequest = window.requestAnimationFrame(this.engineLoop);\n\n    this.extraTime += timeStamp - this.time;\n    this.time = timeStamp;\n\n    if (this.extraTime >= this.timeStep * 3) {\n      this.extraTime = this.timeStep;\n    }\n\n    while (this.extraTime >= this.timeStep) {\n      this.extraTime -= this.timeStep;\n\n      this.update(this.timeStamp);\n\n      this.updated = true;\n    }\n\n    if (this.updated) {\n      this.updated = false;\n      this.render(this.timeStamp);\n    }\n  }\n\n  start() {\n    this.extraTime = this.timeStep;\n\n    this.time = window.performance.now();\n    this.animationFrameRequest = window.requestAnimationFrame(this.engineLoop);\n  }\n\n  stop() {\n    window.cancelAnimationFrame(this.animationFrameRequest);\n  }\n\n  hold() {\n    this.pause = true;\n  }\n\n  resume() {\n    this.pause = false;\n  }\n}\n","export default class Animator {\n  constructor(frameSet, delay = 4) {\n    this.count = 0;\n    this.delay = delay >= 1 ? delay : 1;\n    this.frameSet = frameSet;\n    this.frameIndex = 0;\n    this.frameValue = frameSet[0];\n  }\n\n  animate(last) {\n    this.loop(last);\n  }\n\n  changeFrameSet(frameSet, delay = 4, frameIndex = 0) {\n    if (this.frameSet === frameSet) {\n      return;\n    }\n\n    this.count = 0;\n    this.delay = delay;\n    this.frameSet = frameSet;\n    this.frameIndex = frameIndex;\n    this.frameValue = frameSet[frameIndex];\n  }\n\n  loop(last) {\n    this.count++;\n\n    while (this.count > this.delay) {\n      this.count -= this.delay;\n\n      if (last && this.frameIndex === this.frameSet.length - 1) {\n        this.frameIndex = this.frameSet.length - 1;\n      } else {\n        this.frameIndex =\n          this.frameIndex < this.frameSet.length - 1 ? this.frameIndex + 1 : 0;\n      }\n\n      this.frameValue = this.frameSet[this.frameIndex];\n    }\n  }\n}\n","import Object from \"./object\";\nimport Animator from \"./animator\";\n\nexport default class Coin extends Object {\n  constructor(x, y, offsetX = 0, offsetY = 0, frameSet) {\n    super(x, y, 10, 12);\n\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    this.baseX = x;\n    this.baseY = y;\n    this.positionX = Math.random() * Math.PI * 2;\n    this.positionY = this.positionX * 2;\n\n    this.animator = new Animator(frameSet);\n  }\n\n  update() {\n    this.positionX += 0.1;\n    this.positionY += 0.2;\n\n    this.x = this.baseX + Math.cos(this.positionX) * 2;\n    this.y = this.baseY + Math.sin(this.positionY);\n  }\n\n  updateAnimation() {\n    this.animator.animate();\n  }\n}\n","// import Object from \"./object\";\nimport Coin from \"./coin\";\n\nexport default class items {\n  constructor(objects = [], tileSize) {\n    this.items = [];\n\n    const keys = [{ id: \"\", count: 16 }];\n\n    this.frameSets = {};\n\n    keys.forEach(({ id, count }) => {\n      for (let index = 1; index <= count; index++) {\n        const image = new Image();\n        image.src = `./assets/sprites/coin/image ${index}.png`;\n\n        const addImage = (k, image) => {\n          if (!this.frameSets[k]) {\n            this.frameSets[k] = [];\n          }\n          this.frameSets[k].push(image);\n        };\n\n        addImage(\"coin\", image);\n      }\n    });\n\n    for (let index = 0; index < objects.length; index++) {\n      const { left, top, offsetX, offsetY } = objects[index];\n\n      this.items.push(\n        new Coin(left * tileSize + 5, top * tileSize + 5, offsetX, offsetY, this.frameSets[\"coin\"])\n      );\n    }\n  }\n\n  update() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].update();\n    }\n  }\n\n  updateAnimation() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].updateAnimation();\n    }\n  }\n}\n","export default class Collider {\n  collide(value, object, tileX, tileY, tileSize) {\n    const router = (direction) => {\n      switch (direction) {\n        case \"t\":\n          return this.collidePlatformTop(object, tileY);\n        case \"b\":\n          return this.collidePlatformBottom(object, tileY + tileSize);\n        case \"l\":\n          return this.collidePlatformLeft(object, tileX);\n        case \"r\":\n          return this.collidePlatformRight(object, tileX + tileSize);\n        default:\n          break;\n      }\n    };\n\n    let flag = false;\n    if (typeof value === \"string\") {\n      const keys = value.split(\"\");\n\n      for (let index = 0; index < keys.length; index++) {\n        flag = router(keys[index]);\n        if (flag) {\n          break;\n        }\n      }\n    }\n\n    return flag;\n  }\n\n  collidePlatformBottom(object, bottomTile) {\n    if (object.getTop() < bottomTile && object.getOldTop() >= bottomTile) {\n      object.setTop(bottomTile);\n      object.velocityY = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatformLeft(object, leftTile) {\n    if (object.getRight() > leftTile && object.getOldRight() <= leftTile) {\n      object.setRight(leftTile - 0.01);\n      object.velocityX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatformRight(object, rightTile) {\n    if (object.getLeft() < rightTile && object.getOldLeft() >= rightTile) {\n      object.setLeft(rightTile);\n      object.velocityX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatformTop(object, topTile) {\n    if (object.getBottom() > topTile && object.getOldBottom() <= topTile) {\n      object.setBottom(topTile - 0.01);\n      object.velocityY = 0;\n      object.jumping = false;\n      return true;\n    }\n    return false;\n  }\n}\n","import World from \"./world\";\n\nexport default class Game {\n  constructor() {\n    this.world = new World();\n    this.over = false;\n\n    this.onGameOver = () => {\n      this.over = true;\n    };\n  }\n\n  update() {\n    this.world.update(this.onGameOver);\n  }\n}\n","export default class Object {\n  constructor(x, y, width, height) {\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.xOld = x;\n    this.y = y;\n    this.yOld = y;\n  }\n\n  getBottom() {\n    return this.y + this.height;\n  }\n\n  getLeft() {\n    return this.x;\n  }\n\n  getRight() {\n    return this.x + this.width;\n  }\n\n  getTop() {\n    return this.y;\n  }\n\n  getOldBottom() {\n    return this.yOld + this.height;\n  }\n\n  getOldLeft() {\n    return this.xOld;\n  }\n\n  getOldRight() {\n    return this.xOld + this.width;\n  }\n\n  getOldTop() {\n    return this.yOld;\n  }\n\n  getCenterX() {\n    return this.x + this.width * 0.5;\n  }\n\n  getCenterY() {\n    return this.y + this.height * 0.5;\n  }\n\n  setBottom(y) {\n    this.y = y - this.height;\n  }\n\n  setLeft(x) {\n    this.x = x;\n  }\n\n  setRight(x) {\n    this.x = x - this.width;\n  }\n\n  setTop(y) {\n    this.y = y;\n  }\n\n  setOldBottom(y) {\n    this.yOld = y - this.height;\n  }\n\n  setOldLeft(x) {\n    this.xOld = x;\n  }\n\n  setOldRight(x) {\n    this.xOld = x - this.width;\n  }\n\n  setOldTop(y) {\n    this.yOld = y;\n  }\n\n  setCenterX(x) {\n    this.x = x - this.width * 0.5;\n  }\n\n  setCenterY(y) {\n    this.y = y - this.height * 0.5;\n  }\n}\n","import Object from \"./object\";\nimport Animator from \"./animator\";\nexport default class Player extends Object {\n  constructor() {\n    super(50, 100, 12, 12);\n    this.color = \"#ff0000\";\n\n    this.jumping = true;\n    this.velocityX = 0;\n    this.velocityY = 0;\n    this.direction = 1;\n\n    const keys = [\n      { id: \"Run\", count: 8 },\n      { id: \"Jump\", count: 8 },\n      { id: \"Dead\", count: 8 },\n      { id: \"Idle\", count: 10 },\n    ];\n\n    this.frameSets = {};\n\n    keys.forEach(({ id, count }) => {\n      for (let index = 1; index <= count; index++) {\n        const imageLeft = new Image();\n        const imageRight = new Image();\n        imageLeft.src = `./assets/sprites/player/left/${id} (${index}).png`;\n        imageRight.src = `./assets/sprites/player/right/${id} (${index}).png`;\n\n        const keyLeft = `${id.toLowerCase()}Left`;\n        const keyRight = `${id.toLowerCase()}Right`;\n\n        const addImage = (k, image) => {\n          if (!this.frameSets[k]) {\n            this.frameSets[k] = [];\n          }\n          this.frameSets[k].push(image);\n        };\n\n        addImage(keyLeft, imageLeft);\n        addImage(keyRight, imageRight);\n      }\n    });\n\n    this.animator = new Animator(this.frameSets[\"idleRight\"]);\n  }\n\n  jump() {\n    if (!this.jumping) {\n      this.jumping = true;\n      this.velocityY -= 18;\n    }\n  }\n\n  moveLeft() {\n    this.direction = -1;\n    this.velocityX -= 0.5;\n  }\n  moveRight() {\n    this.direction = 1;\n    this.velocityX += 0.5;\n  }\n\n  updateAnimation({ dead = false }) {\n    if (dead) {\n      if (this.direction < 0) this.animator.changeFrameSet(this.frameSets[\"deadLeft\"], 2);\n      else this.animator.changeFrameSet(this.frameSets[\"deadRight\"], 2);\n\n      this.animator.animate(dead);\n      return;\n    }\n\n    if (this.velocityY < 0) {\n      if (this.direction < 0) this.animator.changeFrameSet(this.frameSets[\"jumpLeft\"], 2);\n      else this.animator.changeFrameSet(this.frameSets[\"jumpRight\"], 2);\n    } else if (this.direction < 0) {\n      if (this.velocityX < -0.1) this.animator.changeFrameSet(this.frameSets[\"runLeft\"]);\n      else this.animator.changeFrameSet(this.frameSets[\"idleLeft\"]);\n    } else if (this.direction > 0) {\n      if (this.velocityX > 0.1) this.animator.changeFrameSet(this.frameSets[\"runRight\"]);\n      else this.animator.changeFrameSet(this.frameSets[\"idleRight\"]);\n    }\n\n    this.animator.animate();\n  }\n\n  update(gravity, friction) {\n    this.xOld = this.x;\n    this.yOld = this.y;\n    this.velocityY += gravity;\n    this.x += this.velocityX;\n    this.y += this.velocityY;\n\n    this.velocityX *= friction;\n    this.velocityY *= friction;\n  }\n}\n","import Object from \"./object\";\n\nexport default class Portal extends Object {\n  constructor({\n    x,\n    y,\n    width,\n    height,\n    direction,\n    destinationX,\n    destinationY,\n    destinationArea,\n  }) {\n    super(x, y, width, height);\n\n    this.direction = direction;\n    this.destinationX = destinationX;\n    this.destinationY = destinationY;\n    this.destinationArea = destinationArea;\n  }\n}\n","import Object from \"./object\";\nimport Animator from \"./animator\";\n\nexport default class Water {\n  constructor(waterObjects = [], tileSize) {\n    this.items = [];\n\n    const keys = [{ id: \"\", count: 17 }];\n\n    this.frameSets = {};\n\n    keys.forEach(({ count }) => {\n      for (let index = 1; index <= count; index++) {\n        const image = new Image();\n        image.src = `./assets/sprites/water/image ${index}.png`;\n\n        const addImage = (k, image) => {\n          if (!this.frameSets[k]) {\n            this.frameSets[k] = [];\n          }\n          this.frameSets[k].push(image);\n        };\n\n        addImage(\"water\", image);\n      }\n    });\n\n    for (let index = 0; index < waterObjects.length; index++) {\n      const { left, top } = waterObjects[index];\n\n      this.items.push(\n        new WaterObject(left * tileSize, top * tileSize, this.frameSets[\"water\"], tileSize)\n      );\n    }\n  }\n\n  update() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].updateAnimation();\n    }\n  }\n}\n\nclass WaterObject extends Object {\n  constructor(x, y, frameSet, tileSize) {\n    super(x, y, tileSize, tileSize);\n\n    this.animator = new Animator(frameSet, 3);\n  }\n\n  updateAnimation() {\n    this.animator.animate();\n  }\n}\n","import Coins from \"./coins\";\nimport Water from \"./water\";\nimport Player from \"./player\";\nimport Object from \"./object\";\nimport Portal from \"./portal\";\nimport Collider from \"./collider\";\nimport AudioController from \"../controller/audio\";\n\nexport default class World {\n  constructor(friction = 0.87, gravity = 2) {\n    this.friction = friction;\n    this.gravity = gravity;\n\n    this.rows = 12;\n    this.columns = 16;\n    this.tileSize = 16;\n\n    this.coins = [];\n    this.totalSnacks = 0;\n    this.height = this.tileSize * this.rows;\n    this.width = this.tileSize * this.columns;\n\n    this.player = new Player();\n    this.collider = new Collider();\n\n    this.audioController = new AudioController();\n  }\n\n  setup(data) {\n    this.id = data.id;\n    this.map = data.areaMap;\n    this.objects = data.objectsMap;\n    this.collisonMap = data.collisonMap;\n\n    this.deathAreas = data.death.map(({ x, y, height, width }) => new Object(x, y, width, height));\n\n    this.portals = data.portals.map((p) => new Portal(p));\n\n    this.coins = new Coins(data.coins, this.tileSize);\n\n    this.water = new Water(data.water, this.tileSize);\n\n    if (this.portal) {\n      this.player.setCenterX(this.portal.destinationX);\n      this.player.setCenterY(this.portal.destinationY);\n      this.player.direction = this.portal.direction;\n\n      this.portal = null;\n    }\n  }\n\n  collideObject(object) {\n    if (object.getLeft() < 0 - this.player.width / 2) {\n      object.setLeft(-this.player.width / 2);\n      object.velocityX = 0;\n    } else if (object.getRight() > this.width + this.player.width / 2) {\n      object.setRight(this.width + this.player.width / 2);\n      object.velocityX = 0;\n    }\n    if (object.getTop() < 0) {\n      object.setTop(0);\n      object.velocityY = 0;\n    } else if (object.getBottom() - 1 > this.height) {\n      object.setBottom(this.height);\n      object.velocityY = 0;\n      object.jumping = false;\n    }\n\n    let bottom, left, right, top;\n\n    const setTop = () => {\n      top = this._normalizeIndex(Math.floor(object.getTop() / this.tileSize), this.rows);\n    };\n\n    const setBottom = () => {\n      bottom = this._normalizeIndex(Math.floor(object.getBottom() / this.tileSize), this.rows);\n    };\n\n    const setLeft = () => {\n      left = Math.floor(object.getLeft() / this.tileSize);\n    };\n\n    const setRight = () => {\n      right = Math.floor(object.getRight() / this.tileSize);\n    };\n\n    setTop();\n    setLeft();\n    this.collider.collide(\n      this.collisonMap[top][left],\n      object,\n      left * this.tileSize,\n      top * this.tileSize,\n      this.tileSize\n    );\n\n    setTop();\n    setRight();\n    this.collider.collide(\n      this.collisonMap[top][right],\n      object,\n      right * this.tileSize,\n      top * this.tileSize,\n      this.tileSize\n    );\n\n    setBottom();\n    setLeft();\n    this.collider.collide(\n      this.collisonMap[bottom][left],\n      object,\n      left * this.tileSize,\n      bottom * this.tileSize,\n      this.tileSize\n    );\n\n    setBottom();\n    setRight();\n    this.collider.collide(\n      this.collisonMap[bottom][right],\n      object,\n      right * this.tileSize,\n      bottom * this.tileSize,\n      this.tileSize\n    );\n  }\n\n  _normalizeIndex(index, maxIndex) {\n    if (index >= maxIndex - 1) {\n      return maxIndex - 1;\n    } else if (index < 0) {\n      return 0;\n    }\n\n    return index;\n  }\n\n  checkCollision(object1, object2) {\n    if (\n      object1.x < object2.x + object2.width &&\n      object1.x + object1.width > object2.x &&\n      object1.y < object2.y + object2.height &&\n      object1.y + object1.height > object2.y\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  update(onGameOver) {\n    this.player.update(this.gravity, this.friction);\n\n    this.collideObject(this.player);\n\n    for (let index = 0; index < this.coins.items.length; index++) {\n      const coin = this.coins.items[index];\n\n      coin.update();\n      coin.updateAnimation();\n\n      if (this.checkCollision(this.player, coin)) {\n        this.coins.items.splice(this.coins.items.indexOf(coin), 1);\n        this.audioController.play(\"coin\");\n        this.totalSnacks += 1;\n      }\n    }\n\n    let dead = false;\n    if (!dead) {\n      for (let index = 0; index < this.deathAreas.length; index++) {\n        if (this.checkCollision(this.player, this.deathAreas[index])) {\n          if (this.isPlayerDead === undefined) {\n            this.audioController.play(\"fall\", \"mp3\");\n          }\n          this.isPlayerDead = true;\n          dead = true;\n          break;\n        }\n      }\n    }\n\n    if (!this.portal) {\n      for (let index = 0; index < this.portals.length; index++) {\n        if (this.checkCollision(this.player, this.portals[index])) {\n          this.portal = this.portals[index];\n          break;\n        }\n      }\n    }\n\n    this.player.updateAnimation({ dead });\n\n    this.water.update();\n\n    if (dead) {\n      this.player.velocityX = 0;\n      onGameOver();\n    }\n  }\n}\n","import Game from \"./game\";\nimport Screen from \"./screen\";\nimport GameEngine from \"./engine\";\nimport Controller from \"./controller\";\n\nimport areas from \"./areas\";\n\nwindow.addEventListener(\"load\", function () {\n  \"use strict\";\n\n  let areaId = 4;\n\n  const controller = new Controller();\n\n  // GAME\n  const game = new Game();\n\n  const setupWorld = () => {\n    game.world.setup(areas[areaId]);\n  };\n\n  setupWorld();\n\n  // SCREEN\n  let screen;\n\n  const setupScreen = () => {\n    screen = new Screen(document.querySelector(\"canvas\"), areas[areaId].world);\n\n    screen.buffer.canvas.height = game.world.height;\n    screen.buffer.canvas.width = game.world.width;\n  };\n\n  setupScreen();\n\n  // GAME ENGINE\n\n  const update = () => {\n    if (!game.over) {\n      if (controller.left.active) {\n        game.world.player.moveLeft();\n      }\n      if (controller.right.active) {\n        game.world.player.moveRight();\n      }\n      if (controller.up.active) {\n        game.world.player.jump();\n        controller.up.active = false;\n      }\n    }\n\n    if (game.world.portal) {\n      engine.hold();\n\n      areaId = game.world.portal.destinationArea;\n\n      setupWorld();\n      setupScreen();\n\n      engine.resume();\n    }\n\n    game.update();\n  };\n\n  const render = () => {\n    screen.drawBackground();\n    screen.drawMap(game.world.map);\n    screen.drawMapObjects(game.world.objects);\n    // screen.drawArea(game.world.portals);\n\n    if (game.world.coins) {\n      for (let index = 0; index < game.world.coins.items.length; index++) {\n        const coin = game.world.coins.items[index];\n\n        screen.drawObject(\n          coin.animator.frameValue,\n          coin.x,\n          coin.y,\n          coin.width,\n          coin.height,\n          coin.offsetX,\n          coin.offsetY\n        );\n        // screen.drawRect(coin);\n      }\n    }\n\n    if (game.world.water) {\n      for (let index = 0; index < game.world.water.items.length; index++) {\n        const waterItem = game.world.water.items[index];\n\n        screen.drawObject(\n          waterItem.animator.frameValue,\n          waterItem.x,\n          waterItem.y,\n          waterItem.width,\n          waterItem.height,\n          waterItem.offsetX,\n          waterItem.offsetY\n        );\n        // screen.drawRect(waterItem);\n      }\n    }\n\n    const { direction } = game.world.player;\n\n    screen.drawPlayer(\n      game.world.player.animator.frameValue,\n      game.world.player.getLeft(),\n      game.world.player.getTop(),\n      60,\n      40,\n      direction < 0 ? -32 : -16,\n      -24\n    );\n    screen.drawRect(game.world.player);\n    screen.render();\n  };\n\n  const resize = () => {\n    screen.resize(\n      document.documentElement.clientWidth - 32,\n      document.documentElement.clientHeight - 32,\n      game.world.height / game.world.width\n    );\n    screen.render();\n  };\n\n  resize();\n\n  var engine = new GameEngine(1000 / 30, update, render);\n\n  engine.start();\n\n  // EVENTS HANDLER\n  const keyDownUp = ({ type, keyCode }) => {\n    controller.keyDownUp(type, keyCode);\n  };\n\n  window.addEventListener(\"keydown\", keyDownUp);\n  window.addEventListener(\"keyup\", keyDownUp);\n  window.addEventListener(\"resize\", resize);\n});\n","import TileSet from \"./tileset\";\n\nexport default class Screen {\n  constructor(canvas, world) {\n    this.buffer = document.createElement(\"canvas\").getContext(\"2d\");\n    this.context = canvas.getContext(\"2d\");\n\n    this.tileSet = new TileSet(16, 8, world);\n  }\n\n  drawMap(map) {\n    const { images, tileSize } = this.tileSet;\n\n    for (let i = 0; i < map.length; i++) {\n      const row = map[i];\n      for (let j = 0; j < row.length; j++) {\n        const value = row[j];\n\n        if (value) {\n          const image = images[value];\n\n          let destinationX = j * tileSize;\n          let destinationY = i * tileSize;\n\n          this.buffer.drawImage(image, destinationX, destinationY, tileSize, tileSize);\n        }\n      }\n    }\n  }\n\n  drawArea(object) {\n    for (let index = 0; index < object.length; index++) {\n      const { x, y, width, height } = object[index];\n      this.buffer.fillRect(x, y, width, height);\n    }\n  }\n\n  drawMapObjects(objects) {\n    const { objectImages, tileSize } = this.tileSet;\n\n    for (let i = 0; i < objects.length; i++) {\n      const row = objects[i];\n      for (let j = 0; j < row.length; j++) {\n        const value = row[j];\n\n        if (value) {\n          value.forEach((element) => {\n            const { id, xOffset = 0, yOffset = 0, width = 16, height = 16 } = element;\n            const image = objectImages[id];\n\n            let destinationX = j * tileSize;\n            let destinationY = i * tileSize;\n\n            this.buffer.drawImage(\n              image,\n              destinationX + xOffset,\n              destinationY + yOffset,\n              width,\n              height\n            );\n          });\n        }\n      }\n    }\n  }\n\n  drawBackground() {\n    this.buffer.drawImage(\n      this.tileSet.tileBackground,\n      0,\n      0,\n      this.buffer.canvas.width,\n      this.buffer.canvas.height\n    );\n  }\n\n  drawPlayer(image, destinationX, destinationY, width, height, offsetX, offsetY, rect) {\n    this.drawObject(image, destinationX + offsetX, destinationY + offsetY, width, height);\n  }\n\n  drawObject(image, destinationX, destinationY, width, height, offsetX = 0, offsetY = 0) {\n    this.buffer.drawImage(image, destinationX + offsetX, destinationY + offsetY, width, height);\n  }\n\n  drawRect({ x, y, width, height }) {\n    this.buffer.fillRect(x, y, width, height);\n  }\n\n  resize(width, height, ratio) {\n    if (height / width > ratio) {\n      this.context.canvas.height = width * ratio;\n      this.context.canvas.width = width;\n    } else {\n      this.context.canvas.height = height;\n      this.context.canvas.width = height / ratio;\n    }\n\n    this.context.webkitImageSmoothingEnabled = false;\n    this.context.mozImageSmoothingEnabled = false;\n    this.context.imageSmoothingEnabled = false;\n  }\n\n  render() {\n    this.context.drawImage(\n      this.buffer.canvas,\n      0,\n      0,\n      this.buffer.canvas.width,\n      this.buffer.canvas.height,\n      0,\n      0,\n      this.context.canvas.width,\n      this.context.canvas.height\n    );\n  }\n}\n","export default class TileSet {\n  constructor(tileSize, columns, world = 1) {\n    const worldKey = `world-${world}`;\n    this.columns = columns;\n    this.tileSize = tileSize;\n\n    this.images = [];\n    this.images.push(null);\n\n    this.objectImages = [];\n    this.objectImages.push(null);\n\n    this.tileBackground = new Image();\n\n    const meta = {\n      1: { objectLen: 11, tileLen: 18 },\n      2: { objectLen: 10, tileLen: 18 },\n      3: { objectLen: 15, tileLen: 16 },\n      4: { objectLen: 14, tileLen: 16 },\n      5: { objectLen: 12, tileLen: 25 },\n    };\n\n    for (let index = 1; index <= meta[world].objectLen; index++) {\n      const image = new Image();\n\n      image.src = `./assets/sprites/${worldKey}/objects/${index}.png`;\n\n      this.objectImages.push(image);\n    }\n\n    for (let index = 1; index <= meta[world].tileLen; index++) {\n      const image = new Image();\n      image.src = `./assets/sprites/${worldKey}/tiles/${index}.png`;\n\n      this.images.push(image);\n    }\n\n    this.tileBackground.src = `./assets/sprites/${worldKey}/bg.png`;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./app/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}