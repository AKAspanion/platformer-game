{"version":3,"sources":["webpack://platformer-game/./app/controller/index.js","webpack://platformer-game/./app/controller/input.js","webpack://platformer-game/./app/engine/index.js","webpack://platformer-game/./app/game/animator.js","webpack://platformer-game/./app/game/coin.js","webpack://platformer-game/./app/game/coins.js","webpack://platformer-game/./app/game/collider.js","webpack://platformer-game/./app/game/index.js","webpack://platformer-game/./app/game/object.js","webpack://platformer-game/./app/game/player.js","webpack://platformer-game/./app/game/portal.js","webpack://platformer-game/./app/game/world.js","webpack://platformer-game/./app/index.js","webpack://platformer-game/./app/screen/index.js","webpack://platformer-game/./app/screen/tileset.js","webpack://platformer-game/webpack/bootstrap","webpack://platformer-game/webpack/runtime/define property getters","webpack://platformer-game/webpack/runtime/hasOwnProperty shorthand","webpack://platformer-game/webpack/runtime/make namespace object","webpack://platformer-game/webpack/startup"],"names":["Controller","this","up","left","right","type","keyCode","down","getInput","Input","active","GameEngine","timeStep","update","render","pause","updated","time","extraTime","animationFrameRequest","engineLoop","t","loop","timeStamp","window","requestAnimationFrame","performance","now","cancelAnimationFrame","Animator","frameSet","delay","count","frameIndex","frameValue","last","length","Coin","x","y","offsetX","offsetY","super","baseX","baseY","positionX","Math","random","PI","positionY","animator","cos","sin","animate","items","objects","tileSize","frameSets","id","forEach","index","image","Image","src","k","push","addImage","top","updateAnimation","Collider","value","object","tileX","tileY","router","direction","collidePlatformTop","collidePlatformBottom","collidePlatformLeft","collidePlatformRight","flag","keys","split","bottomTile","getTop","getOldTop","setTop","velocityY","leftTile","getRight","getOldRight","setRight","velocityX","rightTile","getLeft","getOldLeft","setLeft","topTile","getBottom","getOldBottom","setBottom","jumping","Game","world","over","onGameOver","Object","width","height","xOld","yOld","Player","color","imageLeft","imageRight","keyLeft","toLowerCase","keyRight","dead","changeFrameSet","gravity","friction","Portal","destinationX","destinationY","destinationArea","World","rows","columns","coins","totalSnacks","player","collider","data","map","areaMap","objectsMap","collisonMap","deathAreas","death","portals","p","portal","setCenterX","setCenterY","bottom","_normalizeIndex","floor","collide","maxIndex","object1","object2","collideObject","coin","checkCollision","splice","indexOf","addEventListener","areaId","controller","game","setupWorld","setup","screen","setupScreen","document","querySelector","buffer","canvas","resize","documentElement","clientWidth","clientHeight","engine","moveLeft","moveRight","jump","hold","resume","drawBackground","drawMap","drawMapObjects","drawObject","drawPlayer","drawRect","start","keyDownUp","Screen","createElement","getContext","context","tileSet","images","i","row","j","drawImage","fillRect","objectImages","element","xOffset","yOffset","tileBackground","rect","ratio","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","imageSmoothingEnabled","TileSet","worldKey","meta","1","objectLen","tileLen","2","3","4","5","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"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","file":"bundle.js","sourcesContent":["import Input from \"./input\";\n\nexport default class Controller {\n  constructor() {\n    this.up = new Input();\n    this.left = new Input();\n    this.right = new Input();\n  }\n\n  keyDownUp(type, keyCode) {\n    let down = type == \"keydown\" ? true : false;\n\n    switch (keyCode) {\n      case 37:\n        this.left.getInput(down);\n        break;\n      case 38:\n        this.up.getInput(down);\n        break;\n      case 39:\n        this.right.getInput(down);\n    }\n  }\n}\n","export default class Input {\n  constructor() {\n    this.down = false;\n    this.active = false;\n  }\n\n  getInput(down) {\n    if (this.down != down) this.active = down;\n    this.down = down;\n  }\n}\n","export default class GameEngine {\n  constructor(timeStep, update, render) {\n    this.timeStep = timeStep;\n    this.update = update;\n    this.render = render;\n\n    this.pause = false;\n\n    this.updated = false;\n\n    this.time = null;\n    this.extraTime = 0;\n    this.animationFrameRequest = null;\n    this.engineLoop = (t) => this.loop(t);\n  }\n\n  loop(timeStamp) {\n    if (this.pause) {\n      return;\n    }\n\n    this.animationFrameRequest = window.requestAnimationFrame(this.engineLoop);\n\n    this.extraTime += timeStamp - this.time;\n    this.time = timeStamp;\n\n    if (this.extraTime >= this.timeStep * 3) {\n      this.extraTime = this.timeStep;\n    }\n\n    while (this.extraTime >= this.timeStep) {\n      this.extraTime -= this.timeStep;\n\n      this.update(this.timeStamp);\n\n      this.updated = true;\n    }\n\n    if (this.updated) {\n      this.updated = false;\n      this.render(this.timeStamp);\n    }\n  }\n\n  start() {\n    this.extraTime = this.timeStep;\n\n    this.time = window.performance.now();\n    this.animationFrameRequest = window.requestAnimationFrame(this.engineLoop);\n  }\n\n  stop() {\n    window.cancelAnimationFrame(this.animationFrameRequest);\n  }\n\n  hold() {\n    this.pause = true;\n  }\n\n  resume() {\n    this.pause = false;\n  }\n}\n","export default class Animator {\n  constructor(frameSet, delay = 4) {\n    this.count = 0;\n    this.delay = delay >= 1 ? delay : 1;\n    this.frameSet = frameSet;\n    this.frameIndex = 0;\n    this.frameValue = frameSet[0];\n  }\n\n  animate(last) {\n    this.loop(last);\n  }\n\n  changeFrameSet(frameSet, delay = 4, frameIndex = 0) {\n    if (this.frameSet === frameSet) {\n      return;\n    }\n\n    this.count = 0;\n    this.delay = delay;\n    this.frameSet = frameSet;\n    this.frameIndex = frameIndex;\n    this.frameValue = frameSet[frameIndex];\n  }\n\n  loop(last) {\n    this.count++;\n\n    while (this.count > this.delay) {\n      this.count -= this.delay;\n\n      if (last && this.frameIndex === this.frameSet.length - 1) {\n        this.frameIndex = this.frameSet.length - 1;\n      } else {\n        this.frameIndex =\n          this.frameIndex < this.frameSet.length - 1 ? this.frameIndex + 1 : 0;\n      }\n\n      this.frameValue = this.frameSet[this.frameIndex];\n    }\n  }\n}\n","import Object from \"./object\";\nimport Animator from \"./animator\";\n\nexport default class Coin extends Object {\n  constructor(x, y, offsetX = 0, offsetY = 0, frameSet) {\n    super(x, y, 10, 12);\n\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    this.frameSet = frameSet;\n\n    this.baseX = x;\n    this.baseY = y;\n    this.positionX = Math.random() * Math.PI * 2;\n    this.positionY = this.positionX * 2;\n\n    this.animator = new Animator(this.frameSet);\n  }\n\n  update() {\n    this.positionX += 0.1;\n    this.positionY += 0.2;\n\n    this.x = this.baseX + Math.cos(this.positionX) * 2;\n    this.y = this.baseY + Math.sin(this.positionY);\n  }\n\n  updateAnimation() {\n    this.animator.animate();\n  }\n}\n","// import Object from \"./object\";\nimport Coin from \"./coin\";\n\nexport default class items {\n  constructor(objects = [], tileSize) {\n    this.items = [];\n\n    const keys = [{ id: \"\", count: 16 }];\n\n    this.frameSets = {};\n\n    keys.forEach(({ id, count }) => {\n      for (let index = 1; index <= count; index++) {\n        const image = new Image();\n        image.src = `./sprites/coin/image ${index}.png`;\n\n        const addImage = (k, image) => {\n          if (!this.frameSets[k]) {\n            this.frameSets[k] = [];\n          }\n          this.frameSets[k].push(image);\n        };\n\n        addImage(\"coin\", image);\n      }\n    });\n\n    for (let index = 0; index < objects.length; index++) {\n      const { left, top, offsetX, offsetY } = objects[index];\n\n      this.items.push(\n        new Coin(left * tileSize + 5, top * tileSize + 5, offsetX, offsetY, this.frameSets[\"coin\"])\n      );\n    }\n  }\n\n  update() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].update();\n    }\n  }\n\n  updateAnimation() {\n    for (let index = 0; index < this.items.length; index++) {\n      this.items[index].updateAnimation();\n    }\n  }\n}\n","export default class Collider {\n  collide(value, object, tileX, tileY, tileSize) {\n    const router = (direction) => {\n      switch (direction) {\n        case \"t\":\n          return this.collidePlatformTop(object, tileY);\n        case \"b\":\n          return this.collidePlatformBottom(object, tileY + tileSize);\n        case \"l\":\n          return this.collidePlatformLeft(object, tileX);\n        case \"r\":\n          return this.collidePlatformRight(object, tileX + tileSize);\n        default:\n          break;\n      }\n    };\n\n    let flag = false;\n    if (typeof value === \"string\") {\n      const keys = value.split(\"\");\n\n      for (let index = 0; index < keys.length; index++) {\n        flag = router(keys[index]);\n        if (flag) {\n          break;\n        }\n      }\n    }\n\n    return flag;\n  }\n\n  collidePlatformBottom(object, bottomTile) {\n    if (object.getTop() < bottomTile && object.getOldTop() >= bottomTile) {\n      object.setTop(bottomTile);\n      object.velocityY = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatformLeft(object, leftTile) {\n    if (object.getRight() > leftTile && object.getOldRight() <= leftTile) {\n      object.setRight(leftTile - 0.01);\n      object.velocityX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatformRight(object, rightTile) {\n    if (object.getLeft() < rightTile && object.getOldLeft() >= rightTile) {\n      object.setLeft(rightTile);\n      object.velocityX = 0;\n      return true;\n    }\n    return false;\n  }\n\n  collidePlatformTop(object, topTile) {\n    if (object.getBottom() > topTile && object.getOldBottom() <= topTile) {\n      object.setBottom(topTile - 0.01);\n      object.velocityY = 0;\n      object.jumping = false;\n      return true;\n    }\n    return false;\n  }\n}\n","import World from \"./world\";\n\nexport default class Game {\n  constructor() {\n    this.world = new World();\n    this.over = false;\n\n    this.onGameOver = () => {\n      this.over = true;\n    };\n  }\n\n  update() {\n    this.world.update(this.onGameOver);\n  }\n}\n","export default class Object {\n  constructor(x, y, width, height) {\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.xOld = x;\n    this.y = y;\n    this.yOld = y;\n  }\n\n  getBottom() {\n    return this.y + this.height;\n  }\n\n  getLeft() {\n    return this.x;\n  }\n\n  getRight() {\n    return this.x + this.width;\n  }\n\n  getTop() {\n    return this.y;\n  }\n\n  getOldBottom() {\n    return this.yOld + this.height;\n  }\n\n  getOldLeft() {\n    return this.xOld;\n  }\n\n  getOldRight() {\n    return this.xOld + this.width;\n  }\n\n  getOldTop() {\n    return this.yOld;\n  }\n\n  getCenterX() {\n    return this.x + this.width * 0.5;\n  }\n\n  getCenterY() {\n    return this.y + this.height * 0.5;\n  }\n\n  setBottom(y) {\n    this.y = y - this.height;\n  }\n\n  setLeft(x) {\n    this.x = x;\n  }\n\n  setRight(x) {\n    this.x = x - this.width;\n  }\n\n  setTop(y) {\n    this.y = y;\n  }\n\n  setOldBottom(y) {\n    this.yOld = y - this.height;\n  }\n\n  setOldLeft(x) {\n    this.xOld = x;\n  }\n\n  setOldRight(x) {\n    this.xOld = x - this.width;\n  }\n\n  setOldTop(y) {\n    this.yOld = y;\n  }\n\n  setCenterX(x) {\n    this.x = x - this.width * 0.5;\n  }\n\n  setCenterY(y) {\n    this.y = y - this.height * 0.5;\n  }\n}\n","import Object from \"./object\";\nimport Animator from \"./animator\";\nexport default class Player extends Object {\n  constructor() {\n    super(50, 100, 12, 12);\n    this.color = \"#ff0000\";\n\n    this.jumping = true;\n    this.velocityX = 0;\n    this.velocityY = 0;\n    this.direction = 1;\n\n    const keys = [\n      { id: \"Run\", count: 8 },\n      { id: \"Jump\", count: 8 },\n      { id: \"Dead\", count: 8 },\n      { id: \"Idle\", count: 10 },\n    ];\n\n    this.frameSets = {};\n\n    keys.forEach(({ id, count }) => {\n      for (let index = 1; index <= count; index++) {\n        const imageLeft = new Image();\n        const imageRight = new Image();\n        imageLeft.src = `./sprites/player/left/${id} (${index}).png`;\n        imageRight.src = `./sprites/player/right/${id} (${index}).png`;\n\n        const keyLeft = `${id.toLowerCase()}Left`;\n        const keyRight = `${id.toLowerCase()}Right`;\n\n        const addImage = (k, image) => {\n          if (!this.frameSets[k]) {\n            this.frameSets[k] = [];\n          }\n          this.frameSets[k].push(image);\n        };\n\n        addImage(keyLeft, imageLeft);\n        addImage(keyRight, imageRight);\n      }\n    });\n\n    this.animator = new Animator(this.frameSets[\"idleRight\"]);\n  }\n\n  jump() {\n    if (!this.jumping) {\n      this.jumping = true;\n      this.velocityY -= 18;\n    }\n  }\n\n  moveLeft() {\n    this.direction = -1;\n    this.velocityX -= 0.5;\n  }\n  moveRight() {\n    this.direction = 1;\n    this.velocityX += 0.5;\n  }\n\n  updateAnimation({ dead = false }) {\n    if (dead) {\n      if (this.direction < 0) this.animator.changeFrameSet(this.frameSets[\"deadLeft\"], 2);\n      else this.animator.changeFrameSet(this.frameSets[\"deadRight\"], 2);\n\n      this.animator.animate(dead);\n      return;\n    }\n\n    if (this.velocityY < 0) {\n      if (this.direction < 0) this.animator.changeFrameSet(this.frameSets[\"jumpLeft\"], 2);\n      else this.animator.changeFrameSet(this.frameSets[\"jumpRight\"], 2);\n    } else if (this.direction < 0) {\n      if (this.velocityX < -0.1) this.animator.changeFrameSet(this.frameSets[\"runLeft\"]);\n      else this.animator.changeFrameSet(this.frameSets[\"idleLeft\"]);\n    } else if (this.direction > 0) {\n      if (this.velocityX > 0.1) this.animator.changeFrameSet(this.frameSets[\"runRight\"]);\n      else this.animator.changeFrameSet(this.frameSets[\"idleRight\"]);\n    }\n\n    this.animator.animate();\n  }\n\n  update(gravity, friction) {\n    this.xOld = this.x;\n    this.yOld = this.y;\n    this.velocityY += gravity;\n    this.x += this.velocityX;\n    this.y += this.velocityY;\n\n    this.velocityX *= friction;\n    this.velocityY *= friction;\n  }\n}\n","import Object from \"./object\";\n\nexport default class Portal extends Object {\n  constructor({\n    x,\n    y,\n    width,\n    height,\n    direction,\n    destinationX,\n    destinationY,\n    destinationArea,\n  }) {\n    super(x, y, width, height);\n\n    this.direction = direction;\n    this.destinationX = destinationX;\n    this.destinationY = destinationY;\n    this.destinationArea = destinationArea;\n  }\n}\n","import Coins from \"./coins\";\nimport Player from \"./player\";\nimport Object from \"./object\";\nimport Portal from \"./portal\";\nimport Collider from \"./collider\";\n\nexport default class World {\n  constructor(friction = 0.87, gravity = 2) {\n    this.friction = friction;\n    this.gravity = gravity;\n\n    this.rows = 12;\n    this.columns = 16;\n    this.tileSize = 16;\n\n    this.coins = [];\n    this.totalSnacks = 0;\n    this.height = this.tileSize * this.rows;\n    this.width = this.tileSize * this.columns;\n\n    this.player = new Player();\n    this.collider = new Collider();\n  }\n\n  setup(data) {\n    this.id = data.id;\n    this.map = data.areaMap;\n    this.objects = data.objectsMap;\n    this.collisonMap = data.collisonMap;\n\n    this.deathAreas = data.death.map(({ x, y, height, width }) => new Object(x, y, width, height));\n\n    this.portals = data.portals.map((p) => new Portal(p));\n\n    this.coins = new Coins(data.coins, this.tileSize);\n\n    if (this.portal) {\n      this.player.setCenterX(this.portal.destinationX);\n      this.player.setCenterY(this.portal.destinationY);\n      this.player.direction = this.portal.direction;\n\n      this.portal = null;\n    }\n  }\n\n  collideObject(object) {\n    if (object.getLeft() < 0 - this.player.width / 2) {\n      object.setLeft(-this.player.width / 2);\n      object.velocityX = 0;\n    } else if (object.getRight() > this.width + this.player.width / 2) {\n      object.setRight(this.width + this.player.width / 2);\n      object.velocityX = 0;\n    }\n    if (object.getTop() < 0) {\n      object.setTop(0);\n      object.velocityY = 0;\n    } else if (object.getBottom() - 1 > this.height) {\n      object.setBottom(this.height);\n      object.velocityY = 0;\n      object.jumping = false;\n    }\n\n    let bottom, left, right, top;\n\n    const setTop = () => {\n      top = this._normalizeIndex(Math.floor(object.getTop() / this.tileSize), this.rows);\n    };\n\n    const setBottom = () => {\n      bottom = this._normalizeIndex(Math.floor(object.getBottom() / this.tileSize), this.rows);\n    };\n\n    const setLeft = () => {\n      left = Math.floor(object.getLeft() / this.tileSize);\n    };\n\n    const setRight = () => {\n      right = Math.floor(object.getRight() / this.tileSize);\n    };\n\n    setTop();\n    setLeft();\n    this.collider.collide(\n      this.collisonMap[top][left],\n      object,\n      left * this.tileSize,\n      top * this.tileSize,\n      this.tileSize\n    );\n\n    setTop();\n    setRight();\n    this.collider.collide(\n      this.collisonMap[top][right],\n      object,\n      right * this.tileSize,\n      top * this.tileSize,\n      this.tileSize\n    );\n\n    setBottom();\n    setLeft();\n    this.collider.collide(\n      this.collisonMap[bottom][left],\n      object,\n      left * this.tileSize,\n      bottom * this.tileSize,\n      this.tileSize\n    );\n\n    setBottom();\n    setRight();\n    this.collider.collide(\n      this.collisonMap[bottom][right],\n      object,\n      right * this.tileSize,\n      bottom * this.tileSize,\n      this.tileSize\n    );\n  }\n\n  _normalizeIndex(index, maxIndex) {\n    if (index >= maxIndex - 1) {\n      return maxIndex - 1;\n    } else if (index < 0) {\n      return 0;\n    }\n\n    return index;\n  }\n\n  checkCollision(object1, object2) {\n    if (\n      object1.x < object2.x + object2.width &&\n      object1.x + object1.width > object2.x &&\n      object1.y < object2.y + object2.height &&\n      object1.y + object1.height > object2.y\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  update(onGameOver) {\n    this.player.update(this.gravity, this.friction);\n\n    this.collideObject(this.player);\n\n    for (let index = 0; index < this.coins.items.length; index++) {\n      const coin = this.coins.items[index];\n\n      coin.update();\n      coin.updateAnimation();\n\n      if (this.checkCollision(this.player, coin)) {\n        this.coins.items.splice(this.coins.items.indexOf(coin), 1);\n        this.totalSnacks += 1;\n      }\n    }\n\n    let dead = false;\n    for (let index = 0; index < this.deathAreas.length; index++) {\n      dead = this.checkCollision(this.player, this.deathAreas[index]);\n      if (dead) break;\n    }\n\n    if (!this.portal) {\n      for (let index = 0; index < this.portals.length; index++) {\n        if (this.checkCollision(this.player, this.portals[index])) {\n          this.portal = this.portals[index];\n          break;\n        }\n      }\n    }\n\n    this.player.updateAnimation({ dead });\n\n    if (dead) {\n      this.player.velocityX = 0;\n      onGameOver();\n    }\n  }\n}\n","import Game from \"./game\";\nimport Screen from \"./screen\";\nimport GameEngine from \"./engine\";\nimport Controller from \"./controller\";\n\nimport * as areas from \"./areas\";\n\nwindow.addEventListener(\"load\", function () {\n  \"use strict\";\n\n  let areaId = \"1\";\n\n  const controller = new Controller();\n\n  // GAME\n  const game = new Game();\n\n  const setupWorld = () => {\n    game.world.setup(areas[`area${areaId}`]);\n  };\n\n  setupWorld();\n\n  // SCREEN\n  let screen;\n\n  const setupScreen = () => {\n    screen = new Screen(document.querySelector(\"canvas\"), areas[`area${areaId}`].world);\n\n    screen.buffer.canvas.height = game.world.height;\n    screen.buffer.canvas.width = game.world.width;\n  };\n\n  setupScreen();\n\n  // GAME ENGINE\n\n  const update = () => {\n    if (!game.over) {\n      if (controller.left.active) {\n        game.world.player.moveLeft();\n      }\n      if (controller.right.active) {\n        game.world.player.moveRight();\n      }\n      if (controller.up.active) {\n        game.world.player.jump();\n        controller.up.active = false;\n      }\n    }\n\n    if (game.world.portal) {\n      engine.hold();\n\n      areaId = game.world.portal.destinationArea;\n\n      setupWorld();\n      setupScreen();\n\n      engine.resume();\n    }\n\n    game.update();\n  };\n\n  const render = () => {\n    screen.drawBackground();\n    screen.drawMap(game.world.map);\n    screen.drawMapObjects(game.world.objects);\n    // screen.drawDeathArea(game.world.deathAreas);\n\n    if (game.world.coins) {\n      for (let index = 0; index < game.world.coins.items.length; index++) {\n        const coin = game.world.coins.items[index];\n\n        screen.drawObject(\n          coin.animator.frameValue,\n          coin.x,\n          coin.y,\n          coin.width,\n          coin.height,\n          coin.offsetX,\n          coin.offsetY\n        );\n        // screen.drawRect(coin);\n      }\n    }\n\n    const { direction } = game.world.player;\n\n    screen.drawPlayer(\n      game.world.player.animator.frameValue,\n      game.world.player.getLeft(),\n      game.world.player.getTop(),\n      60,\n      40,\n      direction < 0 ? -32 : -16,\n      -24\n    );\n    screen.drawRect(game.world.player);\n    screen.render();\n  };\n\n  const resize = () => {\n    screen.resize(\n      document.documentElement.clientWidth - 32,\n      document.documentElement.clientHeight - 32,\n      game.world.height / game.world.width\n    );\n    screen.render();\n  };\n\n  resize();\n\n  var engine = new GameEngine(1000 / 30, update, render);\n\n  engine.start();\n\n  // EVENTS HANDLER\n  const keyDownUp = ({ type, keyCode }) => {\n    controller.keyDownUp(type, keyCode);\n  };\n\n  window.addEventListener(\"keydown\", keyDownUp);\n  window.addEventListener(\"keyup\", keyDownUp);\n  window.addEventListener(\"resize\", resize);\n});\n","import TileSet from \"./tileset\";\n\nexport default class Screen {\n  constructor(canvas, world) {\n    this.buffer = document.createElement(\"canvas\").getContext(\"2d\");\n    this.context = canvas.getContext(\"2d\");\n\n    this.tileSet = new TileSet(16, 8, world);\n  }\n\n  drawMap(map) {\n    const { images, tileSize } = this.tileSet;\n\n    for (let i = 0; i < map.length; i++) {\n      const row = map[i];\n      for (let j = 0; j < row.length; j++) {\n        const value = row[j];\n\n        if (value) {\n          const image = images[value];\n\n          let destinationX = j * tileSize;\n          let destinationY = i * tileSize;\n\n          this.buffer.drawImage(image, destinationX, destinationY, tileSize, tileSize);\n        }\n      }\n    }\n  }\n\n  drawDeathArea(death) {\n    for (let index = 0; index < death.length; index++) {\n      const { x, y, width, height } = death[index];\n      this.buffer.fillRect(x, y, width, height);\n    }\n  }\n\n  drawMapObjects(objects) {\n    const { objectImages, tileSize } = this.tileSet;\n\n    for (let i = 0; i < objects.length; i++) {\n      const row = objects[i];\n      for (let j = 0; j < row.length; j++) {\n        const value = row[j];\n\n        if (value) {\n          value.forEach((element) => {\n            const { id, xOffset = 0, yOffset = 0, width = 16, height = 16 } = element;\n            const image = objectImages[id];\n\n            let destinationX = j * tileSize;\n            let destinationY = i * tileSize;\n\n            this.buffer.drawImage(\n              image,\n              destinationX + xOffset,\n              destinationY + yOffset,\n              width,\n              height\n            );\n          });\n        }\n      }\n    }\n  }\n\n  drawBackground() {\n    this.buffer.drawImage(\n      this.tileSet.tileBackground,\n      0,\n      0,\n      this.buffer.canvas.width,\n      this.buffer.canvas.height\n    );\n  }\n\n  drawPlayer(image, destinationX, destinationY, width, height, offsetX, offsetY, rect) {\n    this.drawObject(image, destinationX + offsetX, destinationY + offsetY, width, height);\n  }\n\n  drawObject(image, destinationX, destinationY, width, height, offsetX = 0, offsetY = 0) {\n    this.buffer.drawImage(image, destinationX + offsetX, destinationY + offsetY, width, height);\n  }\n\n  drawRect({ x, y, width, height }) {\n    this.buffer.fillRect(x, y, width, height);\n  }\n\n  resize(width, height, ratio) {\n    if (height / width > ratio) {\n      this.context.canvas.height = width * ratio;\n      this.context.canvas.width = width;\n    } else {\n      this.context.canvas.height = height;\n      this.context.canvas.width = height / ratio;\n    }\n\n    this.context.webkitImageSmoothingEnabled = false;\n    this.context.mozImageSmoothingEnabled = false;\n    this.context.imageSmoothingEnabled = false;\n  }\n\n  render() {\n    this.context.drawImage(\n      this.buffer.canvas,\n      0,\n      0,\n      this.buffer.canvas.width,\n      this.buffer.canvas.height,\n      0,\n      0,\n      this.context.canvas.width,\n      this.context.canvas.height\n    );\n  }\n}\n","export default class TileSet {\n  constructor(tileSize, columns, world = 1) {\n    const worldKey = `world-${world}`;\n    this.columns = columns;\n    this.tileSize = tileSize;\n\n    this.images = [];\n    this.images.push(null);\n\n    this.objectImages = [];\n    this.objectImages.push(null);\n\n    this.tileBackground = new Image();\n\n    const meta = {\n      1: { objectLen: 11, tileLen: 18 },\n      2: { objectLen: 10, tileLen: 18 },\n      3: { objectLen: 15, tileLen: 16 },\n      4: { objectLen: 14, tileLen: 16 },\n      5: { objectLen: 12, tileLen: 25 },\n    };\n\n    for (let index = 1; index <= meta[world].objectLen; index++) {\n      const image = new Image();\n\n      image.src = `./sprites/${worldKey}/objects/${index}.png`;\n\n      this.objectImages.push(image);\n    }\n\n    for (let index = 1; index <= meta[world].tileLen; index++) {\n      const image = new Image();\n      image.src = `./sprites/${worldKey}/tiles/${index}.png`;\n\n      this.images.push(image);\n    }\n\n    this.tileBackground.src = `./sprites/${worldKey}/bg.png`;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./app/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}